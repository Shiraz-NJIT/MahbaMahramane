<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Njit.ImageListView</name>
    </assembly>
    <members>
        <member name="T:Njit.ImageListView.ColumnHeaderCollectionEditor">
            <summary>
            Provides an editor for the column header collection.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ColumnHeaderCollectionEditor.#ctor">
            <summary>
            Initializes a new instance of the ColumnHeaderCollectionEditor class.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ColumnHeaderCollectionEditor.CanRemoveInstance(System.Object)">
            <summary>
            Indicates whether original members of the collection can be removed.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ColumnHeaderCollectionEditor.CreateNewItemTypes">
            <summary>
            Gets the data types that this collection editor can contain.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ColumnHeaderCollectionEditor.GetDisplayText(System.Object)">
            <summary>
            Retrieves the display text for the given list item.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ColumnHeaderCollectionEditor.CanSelectMultipleInstances">
            <summary>
            Indicates whether multiple collection items can be selected at once.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ColumnHeaderCollectionEditor.GetItems(System.Object)">
            <summary>
            Gets an array of objects containing the specified collection.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ColumnHeaderCollectionEditor.CreateCollectionForm">
            <summary>
            Creates a new form to display and edit the current collection.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ColumnHeaderCollectionTypeConverter">
            <summary>
            Provides a type converter for the column header collection.
            This is only used to replace the generic collection text in the
            property browser with "(Collection)".
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ColumnHeaderCollectionTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ColumnHeaderCollectionTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ImageListViewRenderers">
            <summary>
            Represents the built-in renderers.
            </summary>
            <summary>
            Represents the built-in renderers.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ImageListViewRenderers.NewYear2010Renderer">
            <summary>
            A renderer to celebrate the new year of 2010.
            </summary>
            <remarks>Compile with conditional compilation symbol BONUSPACK to
            include this renderer in the assembly.</remarks>
        </member>
        <member name="T:Njit.ImageListView.ImageListView.ImageListViewRenderer">
            <summary>
            Represents an overridable class for image list view renderers.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ImageListView">
            <summary>
            Represents an image list view control.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ImageListView.DefaultColumnWidth">
            <summary>
            Default width of column headers in pixels.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ImageListView.SeparatorSize">
            <summary>
            Selection tolerance for column separators.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ImageListView.PaneBorderSize">
            <summary>
            Selection tolerance for left-pane border.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ImageListView.WS_BORDER">
            <summary>
            Creates a control with a border.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ImageListView.WS_EX_CLIENTEDGE">
            <summary>
            Specifies that the control has a border with a sunken edge.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.#ctor">
            <summary>
            Initializes a new instance of the ImageListView class.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ClearThumbnailCache">
            <summary>
            Clears the thumbnail cache.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.SuspendLayout">
            <summary>
            Temporarily suspends the layout logic for the control.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ResumeLayout">
            <summary>
            Resumes usual layout logic.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ResumeLayout(System.Boolean)">
            <summary>
            Resumes usual layout logic, optionally forcing an immediate layout of pending layout requests.
            </summary>
            <param name="performLayout">true to execute pending layout requests; otherwise, false.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.SetColumnHeader(Njit.ImageListView.ColumnType,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets the properties of the specified column header.
            </summary>
            <param name="type">The column header to modify.</param>
            <param name="text">Column header text.</param>
            <param name="width">Width (in pixels) of the column header.</param>
            <param name="displayIndex">Display index of the column header.</param>
            <param name="visible">true if the column header will be shown; otherwise false.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.SetColumnHeader(Njit.ImageListView.ColumnType,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets the properties of the specified column header.
            </summary>
            <param name="type">The column header to modify.</param>
            <param name="width">Width (in pixels) of the column header.</param>
            <param name="displayIndex">Display index of the column header.</param>
            <param name="visible">true if the column header will be shown; otherwise false.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.SetRenderer(Njit.ImageListView.ImageListView.ImageListViewRenderer)">
            <summary>
            Sets the renderer for this instance.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.Sort">
            <summary>
            Sorts the items.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.SelectAll">
            <summary>
            Marks all items as selected.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ClearSelection">
            <summary>
            Marks all items as unselected.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.HitTest(System.Drawing.Point,Njit.ImageListView.ImageListView.HitInfo@)">
            <summary>
            Determines the image list view element under the specified coordinates.
            </summary>
            <param name="pt">The client coordinates of the point to be tested.</param>
            <param name="hitInfo">Details of the hit test.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.EnsureVisible(System.Int32)">
            <summary>
            Scrolls the image list view to ensure that the item with the specified 
            index is visible on the screen.
            </summary>
            <param name="itemIndex">The index of the item to make visible.</param>
            <returns>true if the item was made visible; otherwise false (item is already visible or the image list view is empty).</returns>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.IsItemVisible(Njit.ImageListView.ImageListViewItem)">
            <summary>
            Determines whether the specified item is visible on the screen.
            </summary>
            <param name="item">The item to test.</param>
            <returns>An ItemVisibility value.</returns>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.Refresh(System.Boolean)">
            <summary>
            Refreshes the control.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.IsItemVisible(System.Guid)">
            <summary>
            Determines whether the specified item is visible on the screen.
            </summary>
            <param name="guid">The Guid of the item to test.</param>
            <returns>true if the item is visible or partially visible; otherwise false.</returns>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.IsItemVisible(System.Int32)">
            <summary>
            Determines whether the specified item is visible on the screen.
            </summary>
            <param name="itemIndex">The index of the item to test.</param>
            <returns>An ItemVisibility value.</returns>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.GetVisibleItems">
            <summary>
            Gets the guids of visible items.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.OnCreateControl">
            <summary>
            Handles the CreateControl event.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>
            Handles the DragOver event.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>
            Handles the DragEnter event.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.OnDragLeave(System.EventArgs)">
            <summary>
            Handles the DragLeave event.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>
            Handles the DragDrop event.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.vScrollBar_Scroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Handles the Scroll event of the vScrollBar control.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.hScrollBar_Scroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Handles the Scroll event of the hScrollBar control.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.OnResize(System.EventArgs)">
            <summary>
            Handles the Resize event.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Handles the Paint event.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseDown event.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseUp event.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseMove event.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseWheel event.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.OnMouseLeave(System.EventArgs)">
            <summary>
            Handles the MouseLeave event.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseDoubleClick event.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            Handles the IsInputKey event.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles the KeyDown event.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles the KeyUp event.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.OnGotFocus(System.EventArgs)">
            <summary>
            Handles the GotFocus event.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.OnLostFocus(System.EventArgs)">
            <summary>
            Handles the LostFocus event.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.OnHandleDestroyed(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the control and its child controls 
            and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; 
            false to release only unmanaged resources.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.OnDropFiles(Njit.ImageListView.DropFileEventArgs)">
            <summary>
            Raises the DropFiles event.
            </summary>
            <param name="e">A DropFileEventArgs that contains event data.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.OnColumnWidthChanged(Njit.ImageListView.ColumnEventArgs)">
            <summary>
            Raises the ColumnWidthChanged event.
            </summary>
            <param name="e">A ColumnEventArgs that contains event data.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.OnColumnClick(Njit.ImageListView.ColumnClickEventArgs)">
            <summary>
            Raises the ColumnClick event.
            </summary>
            <param name="e">A ColumnClickEventArgs that contains event data.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.OnColumnHover(Njit.ImageListView.ColumnHoverEventArgs)">
            <summary>
            Raises the ColumnHover event.
            </summary>
            <param name="e">A ColumnClickEventArgs that contains event data.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.OnItemClick(Njit.ImageListView.ItemClickEventArgs)">
            <summary>
            Raises the ItemClick event.
            </summary>
            <param name="e">A ItemClickEventArgs that contains event data.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.OnItemHover(Njit.ImageListView.ItemHoverEventArgs)">
            <summary>
            Raises the ItemHover event.
            </summary>
            <param name="e">A ItemClickEventArgs that contains event data.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.OnItemDoubleClick(Njit.ImageListView.ItemClickEventArgs)">
            <summary>
            Raises the ItemDoubleClick event.
            </summary>
            <param name="e">A ItemClickEventArgs that contains event data.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.OnSelectionChanged(System.EventArgs)">
            <summary>
            Raises the SelectionChanged event.
            </summary>
            <param name="e">A EventArgs that contains event data.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.OnSelectionChangedInternal">
            <summary>
            Raises the SelectionChanged event.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.OnThumbnailCached(Njit.ImageListView.ThumbnailCachedEventArgs)">
            <summary>
            Raises the ThumbnailCached event.
            </summary>
            <param name="e">A ThumbnailCachedEventArgs that contains event data.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.OnThumbnailCachedInternal(System.Guid,System.Boolean)">
            <summary>
            Raises the ThumbnailCached event.
            This method is invoked from the thumbnail thread.
            </summary>
            <param name="guid">The guid of the item whose thumbnail is cached.</param>
            <param name="error">Determines whether an error occurred during thumbnail extraction.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.OnRefreshInternal">
            <summary>
            Raises the refresh event.
            This method is invoked from the thumbnail thread.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.UpdateItemDetailsInternal(Njit.ImageListView.ImageListViewItem,Njit.ImageListView.Utility.ShellImageFileInfo)">
            <summary>
            Updates item details.
            This method is invoked from the item cache thread.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.UpdateItemDetailsInternal(Njit.ImageListView.ImageListViewItem,Njit.ImageListView.VirtualItemDetailsEventArgs)">
            <summary>
            Updates item details.
            This method is invoked from the item cache thread.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.OnThumbnailCaching(Njit.ImageListView.ItemEventArgs)">
            <summary>
            Raises the ThumbnailCaching event.
            </summary>
            <param name="e">A ItemEventArgs that contains event data.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.OnRetrieveVirtualItemThumbnail(Njit.ImageListView.VirtualItemThumbnailEventArgs)">
            <summary>
            Raises the RetrieveVirtualItem event.
            </summary>
            <param name="e">A VirtualItemThumbnailEventArgs that contains event data.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.OnRetrieveVirtualItemImage(Njit.ImageListView.VirtualItemImageEventArgs)">
            <summary>
            Raises the RetrieveVirtualItemImage event.
            </summary>
            <param name="e">A VirtualItemImageEventArgs that contains event data.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.OnRetrieveVirtualItemDetails(Njit.ImageListView.VirtualItemDetailsEventArgs)">
            <summary>
            Raises the RetrieveVirtualItemDetails event.
            </summary>
            <param name="e">A VirtualItemDetailsEventArgs that contains event data.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.RetrieveVirtualItemThumbnailInternal(Njit.ImageListView.VirtualItemThumbnailEventArgs)">
            <summary>
            Raises the RetrieveVirtualItem event.
            This method is invoked from the thumbnail thread.
            </summary>
            <param name="e">A VirtualItemThumbnailEventArgs that contains event data.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.RetrieveVirtualItemImageInternal(Njit.ImageListView.VirtualItemImageEventArgs)">
            <summary>
            Raises the RetrieveVirtualItemImage event.
            This method is invoked from the thumbnail thread.
            </summary>
            <param name="e">A VirtualItemImageEventArgs that contains event data.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.RetrieveVirtualItemDetailsInternal(Njit.ImageListView.VirtualItemDetailsEventArgs)">
            <summary>
            Raises the RetrieveVirtualItemDetails event.
            This method is invoked from the thumbnail thread.
            </summary>
            <param name="e">A VirtualItemDetailsEventArgs that contains event data.</param>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.AllowColumnClick">
            <summary>
            Gets or sets whether column headers respond to mouse clicks.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.AllowColumnResize">
            <summary>
            Gets or sets whether column headers can be resized with the mouse.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.AllowDrag">
            <summary>
            Gets or sets whether the user can drag items for drag-and-drop operations.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.AllowDuplicateFileNames">
            <summary>
            Gets or sets whether duplicate items (image files pointing to the same path 
            on the file system) are allowed.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.AllowPaneResize">
            <summary>
            Gets or sets whether the left-pane can be resized with the mouse.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.BackColor">
            <summary>
            Gets or sets the background color of the control.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.BorderStyle">
            <summary>
            Gets or sets the border style of the control.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.CacheMode">
            <summary>
            Gets or sets the cache mode. Setting the the CacheMode to Continuous disables the CacheLimit.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.CacheLimit">
            <summary>
            Gets or sets the cache limit as either the count of thumbnail images or the memory allocated for cache (e.g. 10MB).
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.Columns">
            <summary>
            Gets or sets the collection of columns of the image list view.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.DefaultImage">
            <summary>
            Gets or sets the placeholder image.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.DisplayRectangle">
            <summary>
            Gets the rectangle that represents the display area of the control.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ErrorImage">
            <summary>
            Gets or sets the error image.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.HeaderFont">
            <summary>
            Gets or sets the font of the column headers.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.Items">
            <summary>
            Gets the collection of items contained in the image list view.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.PaneWidth">
            <summary>
            Gets or sets the width of the left pane.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.RetryOnError">
            <summary>
            Gets or sets whether the control will retry loading thumbnails on an error.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.SelectedItems">
            <summary>
            Gets the collection of selected items contained in the image list view.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.SortColumn">
            <summary>
            Gets or sets the sort column.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.SortOrder">
            <summary>
            Gets or sets the sort order.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.Text">
            <summary>
            This property is not relevant for this class.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ThumbnailSize">
            <summary>
            Gets or sets the size of image thumbnails.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.UseEmbeddedThumbnails">
            <summary>
            Gets or sets the embedded thumbnails extraction behavior.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.View">
            <summary>
            Gets or sets the view mode of the image list view.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ViewOffset">
            <summary>
            Gets or sets the scroll offset.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ScrollOrientation">
            <summary>
            Gets the scroll orientation.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.CreateParams">
            <summary>
            Gets the required creation parameters when the control handle is created.
            </summary>
            <value></value>
            <returns>A CreateParams that contains the required creation parameters.</returns>
        </member>
        <member name="E:Njit.ImageListView.ImageListView.DropFiles">
            <summary>
            Occurs after the user drops files on to the control.
            </summary>
        </member>
        <member name="E:Njit.ImageListView.ImageListView.ColumnWidthChanged">
            <summary>
            Occurs after the user successfully resized a column header.
            </summary>
        </member>
        <member name="E:Njit.ImageListView.ImageListView.ColumnClick">
            <summary>
            Occurs when the user clicks a column header.
            </summary>
        </member>
        <member name="E:Njit.ImageListView.ImageListView.ColumnHover">
            <summary>
            Occurs when the user moves the mouse over (and out of) a column header.
            </summary>
        </member>
        <member name="E:Njit.ImageListView.ImageListView.ItemClick">
            <summary>
            Occurs when the user clicks an item.
            </summary>
        </member>
        <member name="E:Njit.ImageListView.ImageListView.ItemHover">
            <summary>
            Occurs when the user moves the mouse over (and out of) an item.
            </summary>
        </member>
        <member name="E:Njit.ImageListView.ImageListView.ItemDoubleClick">
            <summary>
            Occurs when the user double-clicks an item.
            </summary>
        </member>
        <member name="E:Njit.ImageListView.ImageListView.SelectionChanged">
            <summary>
            Occurs when the selected items collection changes.
            </summary>
        </member>
        <member name="E:Njit.ImageListView.ImageListView.ThumbnailCached">
            <summary>
            Occurs after an item thumbnail is cached.
            </summary>
        </member>
        <member name="E:Njit.ImageListView.ImageListView.ThumbnailCaching">
            <summary>
            Occurs before an item thumbnail is cached.
            </summary>
        </member>
        <member name="E:Njit.ImageListView.ImageListView.RetrieveVirtualItemThumbnail">
            <summary>
            Occurs when thumbnail image for a virtual item is requested.
            The lifetime of the image will be controlled by the control.
            This event will be run in the worker thread context.
            </summary>
        </member>
        <member name="E:Njit.ImageListView.ImageListView.RetrieveVirtualItemImage">
            <summary>
            Occurs when source image for a virtual item is requested.
            The lifetime of the image will be controlled by the control.
            This event will be run in the worker thread context.
            </summary>
        </member>
        <member name="E:Njit.ImageListView.ImageListView.RetrieveVirtualItemDetails">
            <summary>
            Occurs when details of a virtual item are requested.
            This event will be run in the worker thread context.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ImageListView.HitInfo">
            <summary>
            Represents the details of a mouse hit test.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.HitInfo.#ctor(System.Int32,Njit.ImageListView.ColumnType,Njit.ImageListView.ColumnType,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the HitInfo class.
            </summary>
            <param name="itemIndex">Index of the item.</param>
            <param name="columnIndex">Type of the column.</param>
            <param name="columnSeparator">The column separator.</param>
            <param name="paneBorder">if set to true the mouse cursor is over the left-pane border.</param>
            <param name="inItemArea">if set to true the mouse is in the item area.</param>
            <param name="inHeaderArea">if set to true the mouse cursor is in the column header area.</param>
            <param name="inPaneArea">if set to true the mouse cursor is in the left-pane area.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.HitInfo.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the HitInfo class.
            Used when the control registered an item hit.
            </summary>
            <param name="itemIndex">Index of the item.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.HitInfo.#ctor(Njit.ImageListView.ColumnType,Njit.ImageListView.ColumnType)">
            <summary>
            Initializes a new instance of the HitInfo class.
            Used when the control registered a column hit.
            </summary>
            <param name="columnIndex">Type of the column.</param>
            <param name="columnSeparator">The column separator.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.HitInfo.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the HitInfo class.
            Used when the control registered a hit in pane area.
            </summary>
            <param name="paneBorder">True if the hit point is over the left-pane 
            border, false otherwise.</param>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.HitInfo.ItemHit">
            <summary>
            Gets whether an item is under the hit point.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.HitInfo.ColumnHit">
            <summary>
            Gets whether a column is under the hit point.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.HitInfo.ColumnSeparatorHit">
            <summary>
            Gets whether a column separator is under the hit point.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.HitInfo.ItemIndex">
            <summary>
            Gets the index of the item under the hit point.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.HitInfo.ColumnIndex">
            <summary>
            Gets the index of the column under the hit point.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.HitInfo.ColumnSeparator">
            <summary>
            Gets the index of the column separator under the hit point.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.HitInfo.PaneBorder">
            <summary>
            Gets whether the hit point is over the pane border.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.HitInfo.InItemArea">
            <summary>
            Gets whether the hit point is inside the item area.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.HitInfo.InHeaderArea">
            <summary>
            Gets whether the hit point is inside the column header area.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.HitInfo.InPaneArea">
            <summary>
            Gets whether the hit point is inside the left-pane area.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ImageListView.ImageListViewColumnHeader">
            <summary>
            Represents a column header displayed in details view mode.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewColumnHeader.#ctor(Njit.ImageListView.ColumnType,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the ImageListViewColumnHeader class.
            </summary>
            <param name="type">The type of data to display in this column.</param>
            <param name="text">Text of the column header.</param>
            <param name="width">Width in pixels of the column header.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewColumnHeader.#ctor(Njit.ImageListView.ColumnType,System.String)">
            <summary>
            Initializes a new instance of the ImageListViewColumnHeader class.
            </summary>
            <param name="type">The type of data to display in this column.</param>
            <param name="text">Text of the column header.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewColumnHeader.#ctor(Njit.ImageListView.ColumnType,System.Int32)">
            <summary>
            Initializes a new instance of the ImageListViewColumnHeader class.
            </summary>
            <param name="type">The type of data to display in this column.</param>
            <param name="width">Width in pixels of the column header.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewColumnHeader.#ctor(Njit.ImageListView.ColumnType)">
            <summary>
            Initializes a new instance of the ImageListViewColumnHeader class.
            </summary>
            <param name="type">The type of data to display in this column.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewColumnHeader.#ctor">
            <summary>
            Initializes a new instance of the ImageListViewColumnHeader class.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewColumnHeader.AutoFit">
            <summary>
            Resizes the width of the column based on the length of the column content.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewColumnHeader.DefaultText">
            <summary>
            Gets the default header text for this column type.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewColumnHeader.DisplayIndex">
            <summary>
            Gets or sets the display order of the column.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewColumnHeader.ImageListView">
            <summary>
            Gets the ImageListView owning this item.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewColumnHeader.Text">
            <summary>
            Gets or sets the column header text.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewColumnHeader.Type">
            <summary>
            Gets the type of information displayed by the column.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewColumnHeader.Visible">
            <summary>
            Gets or sets a value indicating whether the control is displayed.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewColumnHeader.Width">
            <summary>
            Gets or sets the column width.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ImageListView.ImageListViewColumnHeaderCollection">
            <summary>
            Represents the collection of columns in an ImageListView control.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewColumnHeaderCollection.#ctor(Njit.ImageListView.ImageListView)">
            <summary>
            Initializes a new instance of the ImageListViewColumnHeaderCollection class.
            </summary>
            <param name="owner">The owner control.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewColumnHeaderCollection.GetDefaultText(Njit.ImageListView.ColumnType)">
            <summary>
            Gets the default column header text for the given column type.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewColumnHeaderCollection.GetEnumerator">
            <summary>
            Returns an enumerator to use to iterate through columns.
            </summary>
            <returns>An IEnumerator&lt;ImageListViewColumn&gt; that represents the item collection.</returns>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewColumnHeaderCollection.GetDisplayedColumns">
            <summary>
            Gets the columns as diplayed on the UI.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewColumnHeaderCollection.ColumnCompare(Njit.ImageListView.ImageListView.ImageListViewColumnHeader,Njit.ImageListView.ImageListView.ImageListViewColumnHeader)">
            <summary>
            Compares the columns by their display index.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewColumnHeaderCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewColumnHeaderCollection.Count">
            <summary>
            Gets the number of columns in the collection.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewColumnHeaderCollection.ImageListView">
            <summary>
            Gets the ImageListView owning this collection.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewColumnHeaderCollection.Item(System.Int32)">
            <summary>
            Gets the column at the specified index within the collection.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewColumnHeaderCollection.Item(Njit.ImageListView.ColumnType)">
            <summary>
            Gets the column with the specified type within the collection.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ImageListView.ImageListViewItemCollection">
            <summary>
            Represents the collection of items in the image list view.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewItemCollection.#ctor(Njit.ImageListView.ImageListView)">
            <summary>
            Initializes a new instance of the ImageListViewItemCollection class.
            </summary>
            <param name="owner">The ImageListView owning this collection.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewItemCollection.Add(Njit.ImageListView.ImageListViewItem)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewItemCollection.Add(System.String)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="filename">The name of the image file.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewItemCollection.Add(System.Object,System.String)">
            <summary>
            Adds a virtual item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="key">The key identifying the item.</param>
            <param name="text">Text of the item.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewItemCollection.Add(System.Object,System.String,System.Drawing.Image)">
            <summary>
            Adds a virtual item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="key">The key identifying the item.</param>
            <param name="text">Text of the item.</param>
            <param name="initialThumbnail">The initial thumbnail image for the item.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewItemCollection.AddRange(Njit.ImageListView.ImageListViewItem[])">
            <summary>
            Adds a range of items to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="items">The items to add to the collection.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewItemCollection.AddRange(System.String[])">
            <summary>
            Adds a range of items to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="filenames">The names or the image files.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewItemCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewItemCollection.Contains(Njit.ImageListView.ImageListViewItem)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewItemCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewItemCollection.Insert(System.Int32,Njit.ImageListView.ImageListViewItem)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </exception>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewItemCollection.Remove(Njit.ImageListView.ImageListViewItem)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </exception>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewItemCollection.AddInternal(Njit.ImageListView.ImageListViewItem)">
            <summary>
            Adds the given item without raising a selection changed event.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewItemCollection.InsertInternal(System.Int32,Njit.ImageListView.ImageListViewItem)">
            <summary>
            Inserts the given item without raising a selection changed event.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewItemCollection.RemoveInternal(Njit.ImageListView.ImageListViewItem)">
            <summary>
            Removes the given item without raising a selection changed event.
            </summary>
            <param name="item">The item to remove.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewItemCollection.RemoveInternal(Njit.ImageListView.ImageListViewItem,System.Boolean)">
            <summary>
            Removes the given item without raising a selection changed event.
            </summary>
            <param name="item">The item to remove.</param>
            <param name="removeFromCache">true to remove item image from cache; otherwise false.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewItemCollection.IndexOf(Njit.ImageListView.ImageListViewItem)">
            <summary>
            Returns the index of the specified item.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewItemCollection.IndexOf(System.Guid)">
            <summary>
            Returns the index of the item with the specified Guid.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewItemCollection.Sort">
            <summary>
            Sorts the items by the sort order and sort column of the owner.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewItemCollection.System#Collections#Generic#ICollection{Njit#ImageListView#ImageListViewItem}#CopyTo(Njit.ImageListView.ImageListViewItem[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewItemCollection.System#Collections#Generic#IList{Njit#ImageListView#ImageListViewItem}#IndexOf(Njit.ImageListView.ImageListViewItem)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewItemCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewItemCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.IList"/>.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewItemCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:System.Collections.IList"/> contains a specific value.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewItemCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewItemCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.IList"/>.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.IList"/> at the specified index.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewItemCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList"/>.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewItemCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewItemCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewItemCollection.FocusedItem">
            <summary>
            Gets or sets the focused item.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewItemCollection.ImageListView">
            <summary>
            Gets the ImageListView owning this collection.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewItemCollection.Item(System.Int32)">
            <summary>
            Gets or sets the item at the specified index.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewItemCollection.Item(System.Guid)">
            <summary>
            Gets the item with the specified Guid.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewItemCollection.System#Collections#ICollection#Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewItemCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection"/> is synchronized (thread safe).
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewItemCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"/>.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewItemCollection.System#Collections#IList#IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList"/> has a fixed size.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewItemCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> at the specified index.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ImageListView.ImageListViewItemCollection.ImageListViewItemComparer">
            <summary>
            Compares items by the sort order and sort column of the owner.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewItemCollection.ImageListViewItemComparer.Compare(Njit.ImageListView.ImageListViewItem,Njit.ImageListView.ImageListViewItem)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ImageListView.ImageListViewRenderer">
            <summary>
            Represents an overridable class for image list view renderers.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewRenderer.#ctor">
            <summary>
            Initializes a new instance of the ImageListViewRenderer class.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewRenderer.GetImageAsync(Njit.ImageListView.ImageListViewItem,System.Drawing.Size)">
            <summary>
            Loads and returns the image for the given item.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewRenderer.Refresh(System.Drawing.Graphics,System.Boolean)">
            <summary>
            Redraws the owner control.
            </summary>
            <param name="graphics">The System.Drawing.Graphics to draw on.</param>
            <param name="forceUpdate">If true, forces an immediate update, even if
            the renderer is suspended by a SuspendPaint call.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewRenderer.Refresh(System.Drawing.Graphics)">
            <summary>
            Redraws the owner control.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewRenderer.SuspendPaint(System.Boolean)">
            <summary>
            Suspends painting until a matching ResumePaint call is made.
            Used by the parent control as part of SuspendLayout.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewRenderer.ResumePaint(System.Boolean)">
            <summary>
            Resumes painting. This call must be matched by a prior SuspendPaint call.
            Used by the parent control as part of ResumeLayout.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewRenderer.SuspendPaint">
            <summary>
            Suspends painting until a matching ResumePaint call is made.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewRenderer.ResumePaint">
            <summary>
            Resumes painting. This call must be matched by a prior SuspendPaint call.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewRenderer.CanPaint">
            <summary>
            Determines if the control can be painted.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewRenderer.Render(System.Drawing.Graphics)">
            <summary>
            Renders the control.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewRenderer.RecreateBuffer">
            <summary>
            Destroys the current buffer and creates a new buffered graphics 
            sized to the client area of the owner control.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewRenderer.System#IDisposable#Dispose">
            <summary>
            Releases buffered graphics objects.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewRenderer.InitializeGraphics(System.Drawing.Graphics)">
            <summary>
            Initializes the System.Drawing.Graphics used to draw
            control elements.
            </summary>
            <param name="g">The System.Drawing.Graphics to draw on.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewRenderer.MeasureColumnHeaderHeight">
            <summary>
            Returns the height of column headers.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewRenderer.MeasureItemMargin(Njit.ImageListView.View)">
            <summary>
            Returns the spacing between items for the given view mode.
            </summary>
            <param name="view">The view mode for which the measurement should be made.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewRenderer.MeasureItem(Njit.ImageListView.View)">
            <summary>
            Returns item size for the given view mode.
            </summary>
            <param name="view">The view mode for which the measurement should be made.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewRenderer.DrawBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the background of the control.
            </summary>
            <param name="g">The System.Drawing.Graphics to draw on.</param>
            <param name="bounds">The client coordinates of the item area.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewRenderer.DrawSelectionRectangle(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the selection rectangle.
            </summary>
            <param name="g">The System.Drawing.Graphics to draw on.</param>
            <param name="selection">The client coordinates of the selection rectangle.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewRenderer.DrawItem(System.Drawing.Graphics,Njit.ImageListView.ImageListViewItem,Njit.ImageListView.ItemState,System.Drawing.Rectangle)">
            <summary>
            Draws the specified item on the given graphics.
            </summary>
            <param name="g">The System.Drawing.Graphics to draw on.</param>
            <param name="item">The ImageListViewItem to draw.</param>
            <param name="state">The current view state of item.</param>
            <param name="bounds">The bounding rectangle of item in client coordinates.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewRenderer.DrawColumnHeader(System.Drawing.Graphics,Njit.ImageListView.ImageListView.ImageListViewColumnHeader,Njit.ImageListView.ColumnState,System.Drawing.Rectangle)">
            <summary>
            Draws the column headers.
            </summary>
            <param name="g">The System.Drawing.Graphics to draw on.</param>
            <param name="column">The ImageListViewColumnHeader to draw.</param>
            <param name="state">The current view state of column.</param>
            <param name="bounds">The bounding rectangle of column in client coordinates.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewRenderer.DrawPane(System.Drawing.Graphics,Njit.ImageListView.ImageListViewItem,System.Drawing.Image,System.Drawing.Rectangle)">
            <summary>
            Draws the left pane in Pane view mode.
            </summary>
            <param name="g">The System.Drawing.Graphics to draw on.</param>
            <param name="item">The ImageListViewItem to draw.</param>
            <param name="image">The image to draw.</param>
            <param name="bounds">The bounding rectangle of the pane.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewRenderer.DrawGalleryImage(System.Drawing.Graphics,Njit.ImageListView.ImageListViewItem,System.Drawing.Image,System.Drawing.Rectangle)">
            <summary>
            Draws the large preview image of the focused item in Gallery mode.
            </summary>
            <param name="g">The System.Drawing.Graphics to draw on.</param>
            <param name="item">The ImageListViewItem to draw.</param>
            <param name="image">The image to draw.</param>
            <param name="bounds">The bounding rectangle of the preview area.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewRenderer.DrawColumnExtender(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the extender after the last column.
            </summary>
            <param name="g">The System.Drawing.Graphics to draw on.</param>
            <param name="bounds">The bounding rectangle of extender column in client coordinates.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewRenderer.DrawInsertionCaret(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the insertion caret for drag and drop operations.
            </summary>
            <param name="g">The System.Drawing.Graphics to draw on.</param>
            <param name="bounds">The bounding rectangle of the insertion caret.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewRenderer.DrawOverlay(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws an overlay image over the client area.
            </summary>
            <param name="g">The System.Drawing.Graphics to draw on.</param>
            <param name="bounds">The bounding rectangle of the client area.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewRenderer.Dispose">
            <summary>
            Releases managed resources.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewRenderer.OnLayout(Njit.ImageListView.LayoutEventArgs)">
            <summary>
            Sets the layout of the control.
            </summary>
            <param name="e">A LayoutEventArgs that contains event data.</param>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewRenderer.ImageListView">
            <summary>
            Gets the ImageListView owning this item.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewRenderer.Clip">
            <summary>
            Gets or sets whether the graphics is clipped to the bounds of 
            drawing elements.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewRenderer.ItemDrawOrder">
            <summary>
            Gets or sets the order by which items are drawn.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewRenderer.ItemAreaBounds">
            <summary>
            Gets the rectangle bounding the item display area.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewRenderer.ColumnHeaderBounds">
            <summary>
            Gets the rectangle bounding the column headers.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ImageListView.ImageListViewRenderer.DrawItemParams">
            <summary>
            Represents the paramaters required to draw an item.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ImageListView.ImageListViewRenderer.ItemDrawOrderComparer">
            <summary>
            Compares items by the draw order.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewRenderer.ItemDrawOrderComparer.Compare(Njit.ImageListView.ImageListView.ImageListViewRenderer.DrawItemParams,Njit.ImageListView.ImageListView.ImageListViewRenderer.DrawItemParams)">
            <summary>
            Compares items by the draw order.
            </summary>
            <param name="param1">First item to compare.</param>
            <param name="param2">Second item to compare.</param>
            <returns>1 if the first item should be drawn first, 
            -1 if the second item should be drawn first,
            0 if the two items can be drawn in any order.</returns>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewRenderer.ItemDrawOrderComparer.CompareByIndex(Njit.ImageListView.ImageListView.ImageListViewRenderer.DrawItemParams,Njit.ImageListView.ImageListView.ImageListViewRenderer.DrawItemParams)">
            <summary>
            Compares items by their index property.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewRenderer.ItemDrawOrderComparer.CompareByZOrder(Njit.ImageListView.ImageListView.ImageListViewRenderer.DrawItemParams,Njit.ImageListView.ImageListView.ImageListViewRenderer.DrawItemParams)">
            <summary>
            Compares items by their zorder property.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewRenderer.ItemDrawOrderComparer.CompareByNormal(Njit.ImageListView.ImageListView.ImageListViewRenderer.DrawItemParams,Njit.ImageListView.ImageListView.ImageListViewRenderer.DrawItemParams)">
            <summary>
            Compares items by their neutral state.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewRenderer.ItemDrawOrderComparer.CompareBySelected(Njit.ImageListView.ImageListView.ImageListViewRenderer.DrawItemParams,Njit.ImageListView.ImageListView.ImageListViewRenderer.DrawItemParams)">
            <summary>
            Compares items by their selected state.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewRenderer.ItemDrawOrderComparer.CompareByHovered(Njit.ImageListView.ImageListView.ImageListViewRenderer.DrawItemParams,Njit.ImageListView.ImageListView.ImageListViewRenderer.DrawItemParams)">
            <summary>
            Compares items by their hovered state.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewRenderer.ItemDrawOrderComparer.CompareByFocused(Njit.ImageListView.ImageListView.ImageListViewRenderer.DrawItemParams,Njit.ImageListView.ImageListView.ImageListViewRenderer.DrawItemParams)">
            <summary>
            Compares items by their focused state.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ImageListView.ImageListViewSelectedItemCollection">
            <summary>
            Represents the collection of selected items in the image list view.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewSelectedItemCollection.#ctor(Njit.ImageListView.ImageListView)">
            <summary>
            Initializes a new instance of the ImageListViewSelectedItemCollection class.
            </summary>
            <param name="owner">The ImageListView owning this collection.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewSelectedItemCollection.Contains(Njit.ImageListView.ImageListViewItem)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewSelectedItemCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewSelectedItemCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewSelectedItemCollection.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewSelectedItemCollection.Clear(System.Boolean)">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewSelectedItemCollection.System#Collections#Generic#ICollection{Njit#ImageListView#ImageListViewItem}#Add(Njit.ImageListView.ImageListViewItem)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewSelectedItemCollection.System#Collections#Generic#ICollection{Njit#ImageListView#ImageListViewItem}#Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewSelectedItemCollection.System#Collections#Generic#ICollection{Njit#ImageListView#ImageListViewItem}#CopyTo(Njit.ImageListView.ImageListViewItem[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="arrayIndex"/> is less than 0.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="array"/> is multidimensional.
            -or-
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            -or-
            The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewSelectedItemCollection.System#Collections#Generic#IList{Njit#ImageListView#ImageListViewItem}#IndexOf(Njit.ImageListView.ImageListViewItem)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewSelectedItemCollection.System#Collections#Generic#IList{Njit#ImageListView#ImageListViewItem}#Insert(System.Int32,Njit.ImageListView.ImageListViewItem)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.
            </exception>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewSelectedItemCollection.System#Collections#Generic#ICollection{Njit#ImageListView#ImageListViewItem}#Remove(Njit.ImageListView.ImageListViewItem)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewSelectedItemCollection.System#Collections#Generic#IList{Njit#ImageListView#ImageListViewItem}#RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.
            </exception>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewSelectedItemCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewSelectedItemCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewSelectedItemCollection.ImageListView">
            <summary>
            Gets the ImageListView owning this collection.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewSelectedItemCollection.Item(System.Int32)">
            <summary>
            Gets or sets the item at the specified index.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewSelectedItemCollection.System#Collections#Generic#IList{Njit#ImageListView#ImageListViewItem}#Item(System.Int32)">
            <summary>
            Gets or sets the item at the specified index.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ImageListView.ImageListViewSelectedItemCollection.ImageListViewSelectedItemEnumerator">
            <summary>
            Represents an enumerator to walk though the selected items.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewSelectedItemCollection.ImageListViewSelectedItemEnumerator.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewSelectedItemCollection.ImageListViewSelectedItemEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewSelectedItemCollection.ImageListViewSelectedItemEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewSelectedItemCollection.ImageListViewSelectedItemEnumerator.Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewSelectedItemCollection.ImageListViewSelectedItemEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ImageListView.ImageListViewNavigationManager">
            <summary>
            Represents details of keyboard and mouse navigation events.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ImageListView.ImageListViewNavigationManager.SelectionTolerance">
            <summary>
            Selection tolerance in pixels.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewNavigationManager.#ctor(Njit.ImageListView.ImageListView)">
            <summary>
            Initializes a new instance of the ImageListViewNavigationManager class.
            </summary>
            <param name="owner">The owner control.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewNavigationManager.HighlightState(Njit.ImageListView.ImageListViewItem)">
            <summary>
            Determines whether the item is highlighted.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewNavigationManager.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, 
            releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewNavigationManager.MouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles control's MouseDown event.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewNavigationManager.MouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles control's MouseMove event.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewNavigationManager.MouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles control's MouseUp event.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewNavigationManager.MouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles control's MouseDoubleClick event.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewNavigationManager.MouseLeave">
            <summary>
            Handles control's MouseLeave event.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewNavigationManager.KeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles control's KeyDown event.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewNavigationManager.KeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles control's KeyUp event.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewNavigationManager.DragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>
            Handles control's DragDrop event.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewNavigationManager.DragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>
            Handles control's DragEnter event.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewNavigationManager.DragOver(System.Windows.Forms.DragEventArgs)">
            <summary>
            Handles control's DragOver event.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewNavigationManager.DragLeave">
            <summary>
            Handles control's DragLeave event.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewNavigationManager.DoHitTest(System.Drawing.Point)">
            <summary>
            Performs a hit test.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewNavigationManager.ApplyNavKey(System.Int32,System.Windows.Forms.Keys)">
            <summary>
            Returns the item index after applying the given navigation key.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListView.ImageListViewNavigationManager.scrollTimer_Tick(System.Object,System.EventArgs)">
            <summary>
            Handles the Tick event of the scrollTimer control.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewNavigationManager.LeftButton">
            <summary>
            Gets whether the left mouse button is down.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewNavigationManager.RightButton">
            <summary>
            Gets whether the right mouse button is down.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewNavigationManager.ShiftKey">
            <summary>
            Gets whether the shift key is down.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewNavigationManager.ControlKey">
            <summary>
            Gets whether the control key is down.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewNavigationManager.HoveredItem">
            <summary>
            Gets the item under the mouse.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewNavigationManager.HoveredColumn">
            <summary>
            Gets the column under the mouse.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewNavigationManager.HoveredSeparator">
            <summary>
            Gets the column whose separator is under the mouse.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewNavigationManager.SelectedSeperator">
            <summary>
            Gets the column whose separator is being dragged.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewNavigationManager.HoveredPaneBorder">
            <summary>
            Gets whether the mouse is over the pane border.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewNavigationManager.MouseSelecting">
            <summary>
            Gets whether a mouse selection is in progress.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewNavigationManager.DraggingSeperator">
            <summary>
            Gets whether a separator is being dragged with the mouse.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewNavigationManager.ResizingPane">
            <summary>
            Gets whether the left-pane is being resized with the mouse.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewNavigationManager.DropTarget">
            <summary>
            Gets the target item for a drop operation.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewNavigationManager.DropToRight">
            <summary>
            Gets whether drop target is to the right of the item.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListView.ImageListViewNavigationManager.SelectionRectangle">
            <summary>
            Gets the selection rectangle.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.NewYear2010Renderer.#ctor">
            <summary>
            Initializes a new instance of the NewYear2010Renderer class.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.NewYear2010Renderer.CreateFlake(System.Int32,System.Int32)">
            <summary>
            Generates a snowflake from a Koch curve.
            http://en.wikipedia.org/wiki/Koch_snowflake
            </summary>
            <param name="size">The size of the snow flake.</param>
            <param name="iterations">Number of iterations. Higher values 
            produce more complex curves.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.NewYear2010Renderer.CreateTerrain">
            <summary>
            Generates a random snowy terrain.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.NewYear2010Renderer.UpdateTimerCallback(System.Object)">
            <summary>
            Updates snow flakes at each timer tick.
            </summary>
            <param name="state">Not used, null.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.NewYear2010Renderer.InitializeGraphics(System.Drawing.Graphics)">
            <summary>
            Initializes the System.Drawing.Graphics used to draw
            control elements.
            </summary>
            <param name="g">The System.Drawing.Graphics to draw on.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.NewYear2010Renderer.OnLayout(Njit.ImageListView.LayoutEventArgs)">
            <summary>
            Sets the layout of the control.
            </summary>
            <param name="e">A LayoutEventArgs that contains event data.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.NewYear2010Renderer.DrawOverlay(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws an overlay image over the client area.
            </summary>
            <param name="g">The System.Drawing.Graphics to draw on.</param>
            <param name="bounds">The bounding rectangle of the client area.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.NewYear2010Renderer.DrawSnowFlake(System.Drawing.Graphics,Njit.ImageListView.ImageListViewRenderers.NewYear2010Renderer.SnowFlake)">
            <summary>
            Draws a snow flake.
            </summary>
            <param name="g">The System.Drawing.Graphics to draw on.</param>
            <param name="snowFlake">The snowflake to draw.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.NewYear2010Renderer.DrawTerrain(System.Drawing.Graphics)">
            <summary>
            Draws the terrain.
            </summary>
            <param name="g">The System.Drawing.Graphics to draw on.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.NewYear2010Renderer.DrawTerrainOutline(System.Drawing.Graphics)">
            <summary>
            Draws the terrain outline.
            </summary>
            <param name="g">The System.Drawing.Graphics to draw on.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.NewYear2010Renderer.Dispose">
            <summary>
            Releases managed resources.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ImageListViewRenderers.NewYear2010Renderer.SnowFlake">
            <summary>
            Represents a snow flake
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.NewYear2010Renderer.SnowFlake.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the SnowFlake class.
            </summary>
            <param name="newSize">The size of the snow flake.</param>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewRenderers.NewYear2010Renderer.SnowFlake.Location">
            <summary>
            Gets or sets the client coordinates of the snow flake.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewRenderers.NewYear2010Renderer.SnowFlake.Rotation">
            <summary>
            Gets or sets the rotation angle of the snow flake in degrees.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewRenderers.NewYear2010Renderer.SnowFlake.Size">
            <summary>
            Gets or sets the size of the snow flake.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ImageListViewRenderers.DefaultRenderer">
            <summary>
            The default renderer.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.DefaultRenderer.#ctor">
            <summary>
            Initializes a new instance of the DefaultRenderer class.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ImageListViewRenderers.NoirRenderer">
            <summary>
            A renderer with a dark theme.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.NoirRenderer.#ctor">
            <summary>
            Initializes a new instance of the NoirRenderer class.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.NoirRenderer.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the NoirRenderer class.
            </summary>
            <param name="reflectionSize">Size of image reflections.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.NoirRenderer.DrawBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the background of the control.
            </summary>
            <param name="g">The System.Drawing.Graphics to draw on.</param>
            <param name="bounds">The client coordinates of the item area.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.NoirRenderer.MeasureItem(Njit.ImageListView.View)">
            <summary>
            Returns item size for the given view mode.
            </summary>
            <param name="view">The view mode for which the measurement should be made.</param>
            <returns></returns>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.NoirRenderer.DrawItem(System.Drawing.Graphics,Njit.ImageListView.ImageListViewItem,Njit.ImageListView.ItemState,System.Drawing.Rectangle)">
            <summary>
            Draws the specified item on the given graphics.
            </summary>
            <param name="g">The System.Drawing.Graphics to draw on.</param>
            <param name="item">The ImageListViewItem to draw.</param>
            <param name="state">The current view state of item.</param>
            <param name="bounds">The bounding rectangle of item in client coordinates.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.NoirRenderer.DrawColumnHeader(System.Drawing.Graphics,Njit.ImageListView.ImageListView.ImageListViewColumnHeader,Njit.ImageListView.ColumnState,System.Drawing.Rectangle)">
            <summary>
            Draws the column headers.
            </summary>
            <param name="g">The System.Drawing.Graphics to draw on.</param>
            <param name="column">The ImageListViewColumnHeader to draw.</param>
            <param name="state">The current view state of column.</param>
            <param name="bounds">The bounding rectangle of column in client coordinates.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.NoirRenderer.DrawColumnExtender(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the extender after the last column.
            </summary>
            <param name="g">The System.Drawing.Graphics to draw on.</param>
            <param name="bounds">The bounding rectangle of extender column in client coordinates.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.NoirRenderer.DrawGalleryImage(System.Drawing.Graphics,Njit.ImageListView.ImageListViewItem,System.Drawing.Image,System.Drawing.Rectangle)">
            <summary>
            Draws the large preview image of the focused item in Gallery mode.
            </summary>
            <param name="g">The System.Drawing.Graphics to draw on.</param>
            <param name="item">The ImageListViewItem to draw.</param>
            <param name="image">The image to draw.</param>
            <param name="bounds">The bounding rectangle of the preview area.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.NoirRenderer.DrawPane(System.Drawing.Graphics,Njit.ImageListView.ImageListViewItem,System.Drawing.Image,System.Drawing.Rectangle)">
            <summary>
            Draws the left pane in Pane view mode.
            </summary>
            <param name="g">The System.Drawing.Graphics to draw on.</param>
            <param name="item">The ImageListViewItem to draw.</param>
            <param name="image">The image to draw.</param>
            <param name="bounds">The bounding rectangle of the pane.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.NoirRenderer.DrawSelectionRectangle(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the selection rectangle.
            </summary>
            <param name="g">The System.Drawing.Graphics to draw on.</param>
            <param name="selection">The client coordinates of the selection rectangle.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.NoirRenderer.DrawInsertionCaret(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the insertion caret for drag and drop operations.
            </summary>
            <param name="g">The System.Drawing.Graphics to draw on.</param>
            <param name="bounds">The bounding rectangle of the insertion caret.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.NoirRenderer.DrawImageWithReflection(System.Drawing.Graphics,System.Drawing.Image,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws an image with a reflection effect at the bottom.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="img">The image to draw.</param>
            <param name="x">The x coordinate of the upper left corner of the image.</param>
            <param name="y">The y coordinate of the upper left corner of the image.</param>
            <param name="reflection">Height of the reflection.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.NoirRenderer.DrawImageWithReflection(System.Drawing.Graphics,System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws an image with a reflection effect at the bottom.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="img">The image to draw.</param>
            <param name="x">The x coordinate of the upper left corner of the image.</param>
            <param name="y">The y coordinate of the upper left corner of the image.</param>
            <param name="width">Width of the drawn image.</param>
            <param name="height">Height of the drawn image.</param>
            <param name="reflection">Height of the reflection.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.NoirRenderer.DrawImageWithReflection(System.Drawing.Graphics,System.Drawing.Image,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Draws an image with a reflection effect at the bottom.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="img">The image to draw.</param>
            <param name="bounds">The target bounding rectangle.</param>
            <param name="reflection">Height of the reflection.</param>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewRenderers.NoirRenderer.ReflectionSize">
            <summary>
            Gets or sets the size of image reflections.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ImageListViewRenderers.TilesRenderer">
            <summary>
            Displays items with large tiles.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.TilesRenderer.#ctor">
            <summary>
            Initializes a new instance of the TilesRenderer class.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.TilesRenderer.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the TilesRenderer class.
            </summary>
            <param name="tileWidth">Width of tiles in pixels.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.TilesRenderer.Dispose">
            <summary>
            Releases managed resources.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.TilesRenderer.MeasureItem(Njit.ImageListView.View)">
            <summary>
            Returns item size for the given view mode.
            </summary>
            <param name="view">The view mode for which the item measurement should be made.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.TilesRenderer.DrawItem(System.Drawing.Graphics,Njit.ImageListView.ImageListViewItem,Njit.ImageListView.ItemState,System.Drawing.Rectangle)">
            <summary>
            Draws the specified item on the given graphics.
            </summary>
            <param name="g">The System.Drawing.Graphics to draw on.</param>
            <param name="item">The ImageListViewItem to draw.</param>
            <param name="state">The current view state of item.</param>
            <param name="bounds">The bounding rectangle of item in client coordinates.</param>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewRenderers.TilesRenderer.TileWidth">
            <summary>
            Gets or sets the width of the tile.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ImageListViewRenderers.XPRenderer">
            <summary>
            Mimics Windows XP appearance.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.XPRenderer.MeasureItem(Njit.ImageListView.View)">
            <summary>
            Returns item size for the given view mode.
            </summary>
            <param name="view">The view mode for which the item measurement should be made.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.XPRenderer.DrawItem(System.Drawing.Graphics,Njit.ImageListView.ImageListViewItem,Njit.ImageListView.ItemState,System.Drawing.Rectangle)">
            <summary>
            Draws the specified item on the given graphics.
            </summary>
            <param name="g">The System.Drawing.Graphics to draw on.</param>
            <param name="item">The ImageListViewItem to draw.</param>
            <param name="state">The current view state of item.</param>
            <param name="bounds">The bounding rectangle of item in client coordinates.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.XPRenderer.DrawGalleryImage(System.Drawing.Graphics,Njit.ImageListView.ImageListViewItem,System.Drawing.Image,System.Drawing.Rectangle)">
            <summary>
            Draws the large preview image of the focused item in Gallery mode.
            </summary>
            <param name="g">The System.Drawing.Graphics to draw on.</param>
            <param name="item">The ImageListViewItem to draw.</param>
            <param name="image">The image to draw.</param>
            <param name="bounds">The bounding rectangle of the preview area.</param>
        </member>
        <member name="T:Njit.ImageListView.ImageListViewRenderers.ZoomingRenderer">
            <summary>
            Zooms items on mouse over.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.ZoomingRenderer.#ctor">
            <summary>
            Initializes a new instance of the ZoomingRenderer class.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.ZoomingRenderer.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the ZoomingRenderer class.
            </summary>
            <param name="zoomRatio">Relative zoom ratio.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.ZoomingRenderer.InitializeGraphics(System.Drawing.Graphics)">
            <summary>
            Initializes the System.Drawing.Graphics used to draw
            control elements.
            </summary>
            <param name="g">The System.Drawing.Graphics to draw on.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.ZoomingRenderer.MeasureItem(Njit.ImageListView.View)">
            <summary>
            Returns item size for the given view mode.
            </summary>
            <param name="view">The view mode for which the item measurement should be made.</param>
            <returns></returns>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewRenderers.ZoomingRenderer.DrawItem(System.Drawing.Graphics,Njit.ImageListView.ImageListViewItem,Njit.ImageListView.ItemState,System.Drawing.Rectangle)">
            <summary>
            Draws the specified item on the given graphics.
            </summary>
            <param name="g">The System.Drawing.Graphics to draw on.</param>
            <param name="item">The ImageListViewItem to draw.</param>
            <param name="state">The current view state of item.</param>
            <param name="bounds">The bounding rectangle of item in client coordinates.</param>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewRenderers.ZoomingRenderer.ZoomRatio">
            <summary>
            Gets or sets the relative zoom ratio.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.DebugRenderer">
            <summary>
            Represents a renderer meant to be used for debugging purposes.
            Included in the debug build only.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.DebugRenderer.#ctor">
            <summary>
            Initializes a new instance of the DebugRenderer class.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.DebugRenderer.DrawItem(System.Drawing.Graphics,Njit.ImageListView.ImageListViewItem,Njit.ImageListView.ItemState,System.Drawing.Rectangle)">
            <summary>
            Draws the specified item on the given graphics.
            </summary>
            <param name="g">The System.Drawing.Graphics to draw on.</param>
            <param name="item">The ImageListViewItem to draw.</param>
            <param name="state">The current view state of item.</param>
            <param name="bounds">The bounding rectangle of item in client coordinates.</param>
        </member>
        <member name="M:Njit.ImageListView.DebugRenderer.DrawOverlay(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws an overlay image over the client area.
            </summary>
            <param name="g">The System.Drawing.Graphics to draw on.</param>
            <param name="bounds">The bounding rectangle of the client area.</param>
        </member>
        <member name="T:Njit.ImageListView.CacheMode">
            <summary>
            Represents the cache mode.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.CacheMode.OnDemand">
            <summary>
            Item thumbnails will be generated only when requested.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.CacheMode.Continuous">
            <summary>
            Item thumbnails will be continuously generated. Setting
            the CacheMode to Continuous disables the CacheLimit.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.CacheState">
            <summary>
            Represents the cache state of a thumbnail image.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.CacheState.Unknown">
            <summary>
            The item is either not cached or it is in the cache queue.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.CacheState.Cached">
            <summary>
            Item thumbnail is cached.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.CacheState.Error">
            <summary>
            An error occurred while creating the item thumbnail.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ColumnState">
            <summary>
            Represents the visual state of an image list column.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ColumnState.None">
            <summary>
            The column is not hovered.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ColumnState.Hovered">
            <summary>
            Mouse cursor is over the column.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ColumnState.SeparatorHovered">
            <summary>
            Mouse cursor is over the column separator.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ColumnState.SeparatorSelected">
            <summary>
            Column separator is being dragged.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ColumnType">
            <summary>
            Represents the type of information displayed in an image list view column.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ColumnType.Name">
            <summary>
            The text of the item, defaults to filename if
            the text is not provided.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ColumnType.DateAccessed">
            <summary>
            The last access date.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ColumnType.DateCreated">
            <summary>
            The creation date.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ColumnType.DateModified">
            <summary>
            The last modification date.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ColumnType.FileType">
            <summary>
            Mime type of the file.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ColumnType.FileName">
            <summary>
            The full path to the file.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ColumnType.FilePath">
            <summary>
            The path to the folder containing the file.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ColumnType.FileSize">
            <summary>
            The size of the file.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ColumnType.Dimensions">
            <summary>
            Image dimensions in pixels.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ColumnType.Resolution">
            <summary>
            Image resolution if dpi.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ColumnType.ImageDescription">
            <summary>
            Image description (Exif tag).
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ColumnType.EquipmentModel">
            <summary>
            The equipment model (Exif tag).
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ColumnType.DateTaken">
            <summary>
            The date image was taken (Exif tag).
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ColumnType.Artist">
            <summary>
            The artist taking the image (Exif tag).
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ColumnType.Copyright">
            <summary>
            Image copyright information (Exif tag).
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ColumnType.ExposureTime">
            <summary>
            Exposure time in seconds (Exif tag).
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ColumnType.FNumber">
            <summary>
            The F number (Exif tag).
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ColumnType.ISOSpeed">
            <summary>
            ISO speed (Exif tag).
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ColumnType.ShutterSpeed">
            <summary>
            Shutter speed (Exif tag).
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ColumnType.Aperture">
            <summary>
            The lens aperture (Exif tag).
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ColumnType.UserComment">
            <summary>
            User comment (Exif tag).
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ItemDrawOrder">
            <summary>
            Represents the order by which items are drawn.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ItemDrawOrder.ItemIndex">
            <summary>
            Draw order is determined by item insertion index.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ItemDrawOrder.ZOrder">
            <summary>
            Draw order is determined by the ZOrder properties of items.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ItemDrawOrder.HoveredNormalSelected">
            <summary>
            Hovered items are drawn first, followed by normal items and selected items.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ItemDrawOrder.HoveredSelectedNormal">
            <summary>
            Hovered items are drawn first, followed by selected items and normal items.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ItemDrawOrder.NormalHoveredSelected">
            <summary>
            Normal items are drawn first, followed by hovered items and selected items.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ItemDrawOrder.NormalSelectedHovered">
            <summary>
            Normal items are drawn first, followed by selected items and hovered items.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ItemDrawOrder.SelectedHoveredNormal">
            <summary>
            Selected items are drawn first, followed by hovered items and normal items.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ItemDrawOrder.SelectedNormalHovered">
            <summary>
            Selected items are drawn first, followed by normal items and hovered items.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ItemState">
            <summary>
            Represents the visual state of an image list view item.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ItemState.None">
            <summary>
            The item is neither selected nor hovered.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ItemState.Selected">
            <summary>
            The item is selected.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ItemState.Focused">
            <summary>
            The item has the input focus.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ItemState.Hovered">
            <summary>
            Mouse cursor is over the item.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ItemVisibility">
            <summary>
            Determines the visibility of an item.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ItemVisibility.NotVisible">
            <summary>
            The item is not visible.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ItemVisibility.PartiallyVisible">
            <summary>
            The item is partially visible.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ItemVisibility.Visible">
            <summary>
            The item is fully visible.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.UseEmbeddedThumbnails">
            <summary>
            Represents the embedded thumbnail extraction behavior.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.UseEmbeddedThumbnails.Always">
            <summary>
            Always creates the thumbnail from the embedded thumbnail.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.UseEmbeddedThumbnails.Auto">
            <summary>
            Creates the thumbnail from the embedded thumbnail when possible,
            reverts to the source image otherwise.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.UseEmbeddedThumbnails.Never">
            <summary>
            Always creates the thumbnail from the source image.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.View">
            <summary>
            Represents the view mode of the image list view.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.View.Details">
            <summary>
            Displays columns with image details. Thumbnail images
            are not displayed. The view can be scrolled vertically.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.View.Gallery">
            <summary>
            Displays a single row of thumbnails at the bottom.
            The view can be scrolled horizontally.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.View.Pane">
            <summary>
            Displays a pane with item details.The view can be 
            scrolled vertically.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.View.Thumbnails">
            <summary>
            Displays thumbnails laid out in a grid. The view can be 
            scrolled vertically.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ItemHighlightState">
            <summary>
            Represents the item highlight state during mouse selection.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ItemHighlightState.NotHighlighted">
            <summary>
            Item is not highlighted.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ItemHighlightState.HighlightedAndUnSelected">
            <summary>
            Item is highlighted and will be removed from the selection set.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.ItemHighlightState.HighlightedAndSelected">
            <summary>
            Item is highlighted and will be added to the selection set.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.DropFilesEventHandler">
            <summary>
            Represents the method that will handle the DropFiles event. 
            </summary>
            <param name="sender">The ImageListView object that is the source of the event.</param>
            <param name="e">A DropFileEventArgs that contains event data.</param>
        </member>
        <member name="T:Njit.ImageListView.ColumnClickEventHandler">
            <summary>
            Represents the method that will handle the ColumnClick event. 
            </summary>
            <param name="sender">The ImageListView object that is the source of the event.</param>
            <param name="e">A ColumnClickEventArgs that contains event data.</param>
        </member>
        <member name="T:Njit.ImageListView.ColumnHoverEventHandler">
            <summary>
            Represents the method that will handle the ColumnHover event. 
            </summary>
            <param name="sender">The ImageListView object that is the source of the event.</param>
            <param name="e">A ColumnHoverEventArgs that contains event data.</param>
        </member>
        <member name="T:Njit.ImageListView.ColumnWidthChangedEventHandler">
            <summary>
            Represents the method that will handle the ColumnWidthChanged event. 
            </summary>
            <param name="sender">The ImageListView object that is the source of the event.</param>
            <param name="e">A ColumnEventArgs that contains event data.</param>
        </member>
        <member name="T:Njit.ImageListView.ItemClickEventHandler">
            <summary>
            Represents the method that will handle the ItemClick event. 
            </summary>
            <param name="sender">The ImageListView object that is the source of the event.</param>
            <param name="e">A ItemClickEventArgs that contains event data.</param>
        </member>
        <member name="T:Njit.ImageListView.ItemHoverEventHandler">
            <summary>
            Represents the method that will handle the ItemHover event. 
            </summary>
            <param name="sender">The ImageListView object that is the source of the event.</param>
            <param name="e">A ItemHoverEventArgs that contains event data.</param>
        </member>
        <member name="T:Njit.ImageListView.ItemDoubleClickEventHandler">
            <summary>
            Represents the method that will handle the ItemDoubleClick event. 
            </summary>
            <param name="sender">The ImageListView object that is the source of the event.</param>
            <param name="e">A ItemClickEventArgs that contains event data.</param>
        </member>
        <member name="T:Njit.ImageListView.ThumbnailCachingEventHandler">
            <summary>
            Represents the method that will handle the ThumbnailCaching event. 
            </summary>
            <param name="sender">The ImageListView object that is the source of the event.</param>
            <param name="e">A ItemEventArgs that contains event data.</param>
        </member>
        <member name="T:Njit.ImageListView.ThumbnailCachedEventHandler">
            <summary>
            Represents the method that will handle the ThumbnailCached event. 
            </summary>
            <param name="sender">The ImageListView object that is the source of the event.</param>
            <param name="e">A ThumbnailCachedEventArgs that contains event data.</param>
        </member>
        <member name="T:Njit.ImageListView.RetrieveVirtualItemThumbnailEventHandler">
            <summary>
            Represents the method that will handle the RetrieveVirtualItemThumbnail event. 
            </summary>
            <param name="sender">The ImageListView object that is the source of the event.</param>
            <param name="e">A VirtualItemThumbnailEventArgs that contains event data.</param>
        </member>
        <member name="T:Njit.ImageListView.RetrieveVirtualItemImageEventHandler">
            <summary>
            Represents the method that will handle the RetrieveVirtualItemImage event. 
            </summary>
            <param name="sender">The ImageListView object that is the source of the event.</param>
            <param name="e">A VirtualItemImageEventArgs that contains event data.</param>
        </member>
        <member name="T:Njit.ImageListView.RetrieveVirtualItemDetailsEventHandler">
            <summary>
            Represents the method that will handle the RetrieveVirtualItemDetails event. 
            </summary>
            <param name="sender">The ImageListView object that is the source of the event.</param>
            <param name="e">A VirtualItemDetailsEventArgs that contains event data.</param>
        </member>
        <member name="T:Njit.ImageListView.UpdateItemDetailsDelegateInternal">
            <summary>
            Updates item details.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.UpdateVirtualItemDetailsDelegateInternal">
            <summary>
            Updates item details.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.CheckItemVisibleDelegateInternal">
            <summary>
            Determines if the given item is visible.
            </summary>
            <param name="guid">The guid of the item to check visibility.</param>
        </member>
        <member name="T:Njit.ImageListView.GetVisibleItemsDelegateInternal">
            <summary>
            Gets the guids of visible items.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.RefreshDelegateInternal">
            <summary>
            Refreshes the owner control.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ThumbnailCachedEventHandlerInternal">
            <summary>
            Represents the method that will handle the ThumbnailCached event. 
            </summary>
            <param name="guid">The guid of the item whose thumbnail is cached.</param>
            <param name="error">Determimes whether an error occurred during thumbnail extraction.</param>
        </member>
        <member name="T:Njit.ImageListView.DropFileEventArgs">
            <summary>
            Represents the event arguments for column related events.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.DropFileEventArgs.#ctor(System.Int32,System.String[])">
            <summary>
            Initializes a new instance of the DropFileEventArgs class.
            </summary>
            <param name="index">The position of the insertion caret.</param>
            <param name="fileNames">The array of filenames droppped on the control.</param>
        </member>
        <member name="P:Njit.ImageListView.DropFileEventArgs.Cancel">
            <summary>
            Gets or sets whether default event code will be processed.
            When set to true, the control will automatically insert the new items.
            Otherwise, the control will not process the dropped files.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.DropFileEventArgs.Index">
            <summary>
            Gets the position of the insertion caret.
            This determines where the new items will be inserted.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.DropFileEventArgs.FileNames">
            <summary>
            Gets the array of filenames droppped on the control.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ColumnEventArgs">
            <summary>
            Represents the event arguments for column related events.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ColumnEventArgs.#ctor(Njit.ImageListView.ImageListView.ImageListViewColumnHeader)">
            <summary>
            Initializes a new instance of the ColumnEventArgs class.
            </summary>
            <param name="column">The column that is the target of this event.</param>
        </member>
        <member name="P:Njit.ImageListView.ColumnEventArgs.Column">
            <summary>
            Gets the ImageListViewColumnHeader that is the target of the event.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ColumnClickEventArgs">
            <summary>
            Represents the event arguments for column click related events.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ColumnClickEventArgs.#ctor(Njit.ImageListView.ImageListView.ImageListViewColumnHeader,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Initializes a new instance of the ColumnClickEventArgs class.
            </summary>
            <param name="column">The column that is the target of this event.</param>
            <param name="location">The location of the mouse.</param>
            <param name="buttons">One of the System.Windows.Forms.MouseButtons values 
            indicating which mouse button was pressed.</param>
        </member>
        <member name="P:Njit.ImageListView.ColumnClickEventArgs.Column">
            <summary>
            Gets the ImageListViewColumnHeader that is the target of the event.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ColumnClickEventArgs.Location">
            <summary>
            Gets the coordinates of the cursor.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ColumnClickEventArgs.X">
            <summary>
            Gets the x-coordinates of the cursor.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ColumnClickEventArgs.Y">
            <summary>
            Gets the y-coordinates of the cursor.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ColumnClickEventArgs.Buttons">
            <summary>
            Gets the state of the mouse buttons.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ColumnHoverEventArgs">
            <summary>
            Represents the event arguments for column hover related events.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ColumnHoverEventArgs.#ctor(Njit.ImageListView.ImageListView.ImageListViewColumnHeader,Njit.ImageListView.ImageListView.ImageListViewColumnHeader)">
            <summary>
            Initializes a new instance of the ColumnHoverEventArgs class.
            </summary>
            <param name="column">The currently hovered column.</param>
            <param name="previousColumn">The previously hovered column.</param>
        </member>
        <member name="P:Njit.ImageListView.ColumnHoverEventArgs.PreviousColumn">
            <summary>
            Gets the ImageListViewColumnHeader that was previously hovered.
            Returns null if there was no previously hovered column.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ColumnHoverEventArgs.Column">
            <summary>
            Gets the currently hovered ImageListViewColumnHeader.
            Returns null if there is no hovered column.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ItemEventArgs">
            <summary>
            Represents the event arguments for item related events.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ItemEventArgs.#ctor(Njit.ImageListView.ImageListViewItem)">
            <summary>
            Initializes a new instance of the ItemEventArgs class.
            </summary>
            <param name="item">The item that is the target of this event.</param>
        </member>
        <member name="P:Njit.ImageListView.ItemEventArgs.Item">
            <summary>
            Gets the ImageListViewItem that is the target of the event.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ItemClickEventArgs">
            <summary>
            Represents the event arguments for item click related events.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ItemClickEventArgs.#ctor(Njit.ImageListView.ImageListViewItem,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Initializes a new instance of the ItemClickEventArgs class.
            </summary>
            <param name="item">The item that is the target of this event.</param>
            <param name="location">The location of the mouse.</param>
            <param name="buttons">One of the System.Windows.Forms.MouseButtons values 
            indicating which mouse button was pressed.</param>
        </member>
        <member name="P:Njit.ImageListView.ItemClickEventArgs.Item">
            <summary>
            Gets the ImageListViewItem that is the target of the event.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ItemClickEventArgs.Location">
            <summary>
            Gets the coordinates of the cursor.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ItemClickEventArgs.X">
            <summary>
            Gets the x-coordinates of the cursor.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ItemClickEventArgs.Y">
            <summary>
            Gets the y-coordinates of the cursor.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ItemClickEventArgs.Buttons">
            <summary>
            Gets the state of the mouse buttons.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ItemHoverEventArgs">
            <summary>
            Represents the event arguments for item hover related events.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ItemHoverEventArgs.#ctor(Njit.ImageListView.ImageListViewItem,Njit.ImageListView.ImageListViewItem)">
            <summary>
            Initializes a new instance of the ItemEventArgs class.
            </summary>
            <param name="item">The currently hovered item.</param>
            <param name="previousItem">The previously hovered item.</param>
        </member>
        <member name="P:Njit.ImageListView.ItemHoverEventArgs.PreviousItem">
            <summary>
            Gets the ImageListViewItem that was previously hovered.
            Returns null if there was no previously hovered item.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ItemHoverEventArgs.Item">
            <summary>
            Gets the currently hovered ImageListViewItem.
            Returns null if there is no hovered item.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.LayoutEventArgs">
            <summary>
            Represents the event arguments related to control layout.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.LayoutEventArgs.#ctor(System.Drawing.Rectangle)">
            <summary>
            Initializes a new instance of the LayoutEventArgs class.
            </summary>
            <param name="itemAreaBounds">The rectangle bounding the item area.</param>
        </member>
        <member name="P:Njit.ImageListView.LayoutEventArgs.ItemAreaBounds">
            <summary>
            Gets or sets the rectangle bounding the item area.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ThumbnailCachedEventArgs">
            <summary>
            Represents the event arguments for the thumbnail cached event.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ThumbnailCachedEventArgs.#ctor(Njit.ImageListView.ImageListViewItem,System.Boolean)">
            <summary>
            Initializes a new instance of the ItemEventArgs class.
            </summary>
            <param name="item">The item that is the target of this event.</param>
            <param name="error">Determines whether an error occurred during thumbnail extraction.</param>
        </member>
        <member name="P:Njit.ImageListView.ThumbnailCachedEventArgs.Item">
            <summary>
            Gets the ImageListViewItem that is the target of the event.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ThumbnailCachedEventArgs.Error">
            <summary>
            Gets whether an error occurred during thumbnail extraction.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.VirtualItemThumbnailEventArgs">
            <summary>
            Represents the event arguments related to virtual item 
            thumbnail requests.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.VirtualItemThumbnailEventArgs.#ctor(System.Object,System.Drawing.Size)">
            <summary>
            Initializes a new instance of the LayoutEventArgs class.
            </summary>
            <param name="key">The key of the virtual item.</param>
            <param name="thumbnailDimensions">Requested thumbnail pixel dimensions.</param>
        </member>
        <member name="P:Njit.ImageListView.VirtualItemThumbnailEventArgs.Key">
            <summary>
            Gets the key of the virtual item.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.VirtualItemThumbnailEventArgs.ThumbnailDimensions">
            <summary>
            Gets the size of the thumbnail image for the virtual item
            represented by Key.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.VirtualItemThumbnailEventArgs.ThumbnailImage">
            <summary>
            Gets or sets the thumbnail image for the virtual item
            represented by Key.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.VirtualItemImageEventArgs">
            <summary>
            Represents the event arguments related to virtual item images.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.VirtualItemImageEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the LayoutEventArgs class.
            </summary>
            <param name="key">The key of the virtual item.</param>
        </member>
        <member name="P:Njit.ImageListView.VirtualItemImageEventArgs.Key">
            <summary>
            Gets the key of the virtual item.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.VirtualItemImageEventArgs.FileName">
            <summary>
            Gets or sets the full path to the source image for the virtual item
            represented by Key.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.VirtualItemDetailsEventArgs">
            <summary>
            Represents the event arguments related to virtual item details.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.VirtualItemDetailsEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the LayoutEventArgs class.
            </summary>
            <param name="key">The key of the virtual item.</param>
        </member>
        <member name="P:Njit.ImageListView.VirtualItemDetailsEventArgs.Key">
            <summary>
            Gets the key of the virtual item.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.VirtualItemDetailsEventArgs.DateAccessed">
            <summary>
            Gets or sets the last access date of the image file represented by this item.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.VirtualItemDetailsEventArgs.DateCreated">
            <summary>
            Gets or sets the creation date of the image file represented by this item.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.VirtualItemDetailsEventArgs.DateModified">
            <summary>
            Gets or sets the modification date of the image file represented by this item.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.VirtualItemDetailsEventArgs.FileType">
            <summary>
            Gets or sets the shell type of the image file represented by this item.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.VirtualItemDetailsEventArgs.FileName">
            <summary>
            Gets or sets the name of the image fie represented by this item.
            </summary>        
        </member>
        <member name="P:Njit.ImageListView.VirtualItemDetailsEventArgs.FilePath">
            <summary>
            Gets or sets the path of the image fie represented by this item.
            </summary>        
        </member>
        <member name="P:Njit.ImageListView.VirtualItemDetailsEventArgs.FileSize">
            <summary>
            Gets or sets file size in bytes.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.VirtualItemDetailsEventArgs.Dimensions">
            <summary>
            Gets or sets image dimensions.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.VirtualItemDetailsEventArgs.Resolution">
            <summary>
            Gets or sets image resolution in pixels per inch.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.VirtualItemDetailsEventArgs.ImageDescription">
            <summary>
            Gets or sets image deascription.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.VirtualItemDetailsEventArgs.EquipmentModel">
            <summary>
            Gets or sets the camera model.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.VirtualItemDetailsEventArgs.DateTaken">
            <summary>
            Gets or sets the date and time the image was taken.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.VirtualItemDetailsEventArgs.Artist">
            <summary>
            Gets or sets the name of the artist.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.VirtualItemDetailsEventArgs.Copyright">
            <summary>
            Gets or sets image copyright information.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.VirtualItemDetailsEventArgs.ExposureTime">
            <summary>
            Gets or sets the exposure time in seconds.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.VirtualItemDetailsEventArgs.FNumber">
            <summary>
            Gets or sets the F number.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.VirtualItemDetailsEventArgs.ISOSpeed">
            <summary>
            Gets or sets the ISO speed.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.VirtualItemDetailsEventArgs.ShutterSpeed">
            <summary>
            Gets or sets the shutter speed.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.VirtualItemDetailsEventArgs.Aperture">
            <summary>
            Gets or sets the lens aperture value.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.VirtualItemDetailsEventArgs.UserComment">
            <summary>
            Gets or sets user comments.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ImageListViewCacheManager">
            <summary>
            Represents the cache manager responsible for asynchronously loading
            item thumbnails.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewCacheManager.#ctor(Njit.ImageListView.ImageListView)">
            <summary>
            Initializes a new instance of the ImageListViewCacheManager class.
            </summary>
            <param name="owner">The owner control.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewCacheManager.BeginItemEdit(System.Guid,System.String)">
            <summary>
            Starts editing an item. While items are edited,
            their original images will be seperately cached
            instead of fetching them from the file.
            </summary>
            <param name="guid">The guid representing the item</param>
            <param name="filename">The image filename.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewCacheManager.BeginItemEdit(System.Guid)">
            <summary>
            Starts editing a virtual item. While items are edited,
            their original images will be seperately cached
            instead of fetching them from the file.
            </summary>
            <param name="guid">The guid representing the item</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewCacheManager.EndItemEdit(System.Guid)">
            <summary>
            Ends editing an item. After this call, item
            image will be continued to be fetched from the
            file.
            </summary>
            <param name="guid">The guid representing the item.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewCacheManager.GetCacheState(System.Guid)">
            <summary>
            Gets the cache state of the specified item.
            </summary>
            <param name="guid">The guid representing the item.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewCacheManager.Clear">
            <summary>
            Clears the thumbnail cache.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewCacheManager.Remove(System.Guid)">
            <summary>
            Removes the given item from the cache.
            </summary>
            <param name="guid">The guid of the item to remove.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewCacheManager.Remove(System.Guid,System.Boolean)">
            <summary>
            Removes the given item from the cache.
            </summary>
            <param name="guid">The guid of the item to remove.</param>
            <param name="removeNow">true to remove the item now; false to remove the
            item later when the cache is purged.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewCacheManager.Add(System.Guid,System.String,System.Drawing.Size,Njit.ImageListView.UseEmbeddedThumbnails)">
            <summary>
            Adds the image to the cache queue.
            </summary>
            <param name="guid">The guid representing this item.</param>
            <param name="filename">Filesystem path to the image file.</param>
            <param name="thumbSize">Requested thumbnail size.</param>
            <param name="useEmbeddedThumbnails">UseEmbeddedThumbnails property of the owner control.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewCacheManager.Add(System.Guid,System.Object,System.Drawing.Size,Njit.ImageListView.UseEmbeddedThumbnails)">
            <summary>
            Adds a virtual item to the cache queue.
            </summary>
            <param name="guid">The guid representing this item.</param>
            <param name="key">The key of this item.</param>
            <param name="thumbSize">Requested thumbnail size.</param>
            <param name="useEmbeddedThumbnails">UseEmbeddedThumbnails property of the owner control.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewCacheManager.Add(System.Guid,System.Object,System.Drawing.Size,System.Drawing.Image,Njit.ImageListView.UseEmbeddedThumbnails)">
            <summary>
            Adds a virtual item to the cache.
            </summary>
            <param name="guid">The guid representing this item.</param>
            <param name="key">The key of this item.</param>
            <param name="thumbSize">Requested thumbnail size.</param>
            <param name="thumb">Thumbnail image to add to cache.</param>
            <param name="useEmbeddedThumbnails">UseEmbeddedThumbnails property of the owner control.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewCacheManager.AddToRendererCache(System.Guid,System.String,System.Drawing.Size,Njit.ImageListView.UseEmbeddedThumbnails)">
            <summary>
            Adds the image to the renderer cache queue.
            </summary>
            <param name="guid">The guid representing this item.</param>
            <param name="filename">Filesystem path to the image file.</param>
            <param name="thumbSize">Requested thumbnail size.</param>
            <param name="useEmbeddedThumbnails">UseEmbeddedThumbnails property of the owner control.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewCacheManager.AddToRendererCache(System.Guid,System.Object,System.Drawing.Size,Njit.ImageListView.UseEmbeddedThumbnails)">
            <summary>
            Adds the virtual item image to the renderer cache queue.
            </summary>
            <param name="guid">The guid representing this item.</param>
            <param name="key">The key of this item.</param>
            <param name="thumbSize">Requested thumbnail size.</param>
            <param name="useEmbeddedThumbnails">UseEmbeddedThumbnails property of the owner control.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewCacheManager.GetRendererImage(System.Guid,System.Drawing.Size,Njit.ImageListView.UseEmbeddedThumbnails)">
            <summary>
            Gets the image from the renderer cache. If the image is not cached,
            null will be returned.
            </summary>
            <param name="guid">The guid representing this item.</param>
            <param name="thumbSize">Requested thumbnail size.</param>
            <param name="useEmbeddedThumbnails">UseEmbeddedThumbnails property of the owner control.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewCacheManager.GetImage(System.Guid)">
            <summary>
            Gets the image from the thumbnail cache. If the image is not cached,
            null will be returned.
            </summary>
            <param name="guid">The guid representing this item.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewCacheManager.Stop">
            <summary>
            Stops the cache manager.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewCacheManager.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing,
            releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewCacheManager.DoWork">
            <summary>
            Used by the worker thread to generate image thumbnails.
            Once a thumbnail image is generated, the item will be redrawn
            to replace the placeholder image.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewCacheManager.RetryOnError">
            <summary>
            Determines whether the cache manager retries loading items on errors.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewCacheManager.Stopping">
            <summary>
            Determines whether the cache thread is being stopped.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewCacheManager.Stopped">
            <summary>
            Determines whether the cache thread is stopped.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewCacheManager.CacheMode">
            <summary>
            Gets or sets the cache mode.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewCacheManager.CacheLimitAsItemCount">
            <summary>
            Gets or sets the cache limit as count of items.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewCacheManager.CacheLimitAsMemory">
            <summary>
            Gets or sets the cache limit as allocated memory in MB.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewCacheManager.MemoryUsed">
            <summary>
            Gets the approximate amount of memory used by the cache.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewCacheManager.CacheSize">
            <summary>
            Returns the count of items in the cache.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ImageListViewCacheManager.CacheItem">
            <summary>
            Represents an item in the thumbnail cache.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewCacheManager.CacheItem.#ctor(System.Guid,System.Object,System.Drawing.Size,System.Drawing.Image,Njit.ImageListView.CacheState)">
            <summary>
            Initializes a new instance of the CacheItem class
            for use with a virtual item.
            </summary>
            <param name="guid">The guid of the ImageListViewItem.</param>
            <param name="key">The public key for the virtual item.</param>
            <param name="size">The size of the requested thumbnail.</param>
            <param name="image">The thumbnail image.</param>
            <param name="state">The cache state of the item.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewCacheManager.CacheItem.#ctor(System.Guid,System.Object,System.Drawing.Size,System.Drawing.Image,Njit.ImageListView.CacheState,Njit.ImageListView.UseEmbeddedThumbnails)">
            <summary>
            Initializes a new instance of the CacheItem class
            for use with a virtual item.
            </summary>
            <param name="guid">The guid of the ImageListViewItem.</param>
            <param name="key">The public key for the virtual item.</param>
            <param name="size">The size of the requested thumbnail.</param>
            <param name="image">The thumbnail image.</param>
            <param name="state">The cache state of the item.</param>
            <param name="useEmbeddedThumbnails">UseEmbeddedThumbnails property of the owner control.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewCacheManager.CacheItem.#ctor(System.Guid,System.String,System.Drawing.Size,System.Drawing.Image,Njit.ImageListView.CacheState)">
            <summary>
            Initializes a new instance of the CacheItem class.
            </summary>
            <param name="guid">The guid of the ImageListViewItem.</param>
            <param name="filename">The file system path to the image file.</param>
            <param name="size">The size of the requested thumbnail.</param>
            <param name="image">The thumbnail image.</param>
            <param name="state">The cache state of the item.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewCacheManager.CacheItem.#ctor(System.Guid,System.String,System.Drawing.Size,System.Drawing.Image,Njit.ImageListView.CacheState,Njit.ImageListView.UseEmbeddedThumbnails)">
            <summary>
            Initializes a new instance of the CacheItem class.
            </summary>
            <param name="guid">The guid of the ImageListViewItem.</param>
            <param name="filename">The file system path to the image file.</param>
            <param name="size">The size of the requested thumbnail.</param>
            <param name="image">The thumbnail image.</param>
            <param name="state">The cache state of the item.</param>
            <param name="useEmbeddedThumbnails">UseEmbeddedThumbnails property of the owner control.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewCacheManager.CacheItem.Dispose">
            <summary>
            Performs application-defined tasks associated with 
            freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewCacheManager.CacheItem.Guid">
            <summary>
            Gets the guid of the item.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewCacheManager.CacheItem.FileName">
            <summary>
            Gets the name of the image file.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewCacheManager.CacheItem.Size">
            <summary>
            Gets the size of the requested thumbnail.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewCacheManager.CacheItem.Image">
            <summary>
            Gets the cached image.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewCacheManager.CacheItem.State">
            <summary>
            Gets the state of the cache item.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewCacheManager.CacheItem.UseEmbeddedThumbnails">
            <summary>
            Gets embedded thumbnail extraction behavior.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewCacheManager.CacheItem.IsVirtualItem">
            <summary>
            Gets whether this item represents a virtual ImageListViewItem.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewCacheManager.CacheItem.VirtualItemKey">
            <summary>
            Gets the public key for the virtual item.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ImageListViewDesigner">
            <summary>
            Represents the designer of the image list view.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewDesigner.ActionLists">
            <summary>
            Gets the design-time action lists supported by the component associated with the designer.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ImageListViewActionLists">
            <summary>
            Defines smart tag entries for the image list view.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewActionLists.#ctor(System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the ImageListViewActionLists class.
            </summary>
            <param name="component">A component related to the DesignerActionList.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewActionLists.SetProperty(System.String,System.Object)">
            <summary>
            Sets the specified ImageListView property.
            </summary>
            <param name="propName">Name of the member property.</param>
            <param name="value">New value of the property.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewActionLists.EditColumns">
            <summary>
            Invokes the editor for the columns of the designed ImageListView.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewActionLists.GetSortedActionItems">
            <summary>
            Returns the collection of <see cref="T:System.ComponentModel.Design.DesignerActionItem"/> objects contained in the list.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewActionLists.System#IServiceProvider#GetService(System.Type)">
            <summary>
            Returns an object that represents a service provided by the component 
            associated with the <see cref="T:System.ComponentModel.Design.DesignerActionList"/>.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewActionLists.System#Windows#Forms#Design#IWindowsFormsEditorService#CloseDropDown">
            <summary>
            Closes any previously opened drop down control area.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewActionLists.System#Windows#Forms#Design#IWindowsFormsEditorService#DropDownControl(System.Windows.Forms.Control)">
            <summary>
            Displays the specified control in a drop down area below a value 
            field of the property grid that provides this service.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewActionLists.System#Windows#Forms#Design#IWindowsFormsEditorService#ShowDialog(System.Windows.Forms.Form)">
            <summary>
            Shows the specified <see cref="T:System.Windows.Forms.Form"/>.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewActionLists.System#ComponentModel#ITypeDescriptorContext#OnComponentChanged">
            <summary>
            Raises the <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged"/> event.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewActionLists.System#ComponentModel#ITypeDescriptorContext#OnComponentChanging">
            <summary>
            Raises the <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging"/> event.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewActionLists.SortColumn">
            <summary>
            Gets or sets the sort column of the designed ImageListView.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewActionLists.SortOrder">
            <summary>
            Gets or sets the sort oerder of the designed ImageListView.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewActionLists.View">
            <summary>
            Gets or sets the view mode of the designed ImageListView.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewActionLists.System#ComponentModel#ITypeDescriptorContext#Container">
            <summary>
            Gets the container representing this 
            <see cref="T:System.ComponentModel.TypeDescriptor"/> request.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewActionLists.System#ComponentModel#ITypeDescriptorContext#Instance">
            <summary>
            Gets the object that is connected with this type descriptor request.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewActionLists.System#ComponentModel#ITypeDescriptorContext#PropertyDescriptor">
            <summary>
            Gets the <see cref="T:System.ComponentModel.PropertyDescriptor"/> 
            that is associated with the given context item.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ImageListViewItem">
            <summary>
            Represents an item in the image list view.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewItem.#ctor">
            <summary>
            Initializes a new instance of the ImageListViewItem class.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ImageListViewItem class.
            </summary>
            <param name="filename">The image filename representing the item.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewItem.#ctor(System.Object,System.String,System.Drawing.Size)">
            <summary>
            Initializes a new instance of a virtual ImageListViewItem class.
            </summary>
            <param name="key">The key identifying this item.</param>
            <param name="text">Text of this item.</param>
            <param name="dimensions">Pixel dimensions of the source image.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewItem.#ctor(System.Object,System.String)">
            <summary>
            Initializes a new instance of a virtual ImageListViewItem class.
            </summary>
            <param name="key">The key identifying this item.</param>
            <param name="text">Text of this item.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewItem.#ctor(System.Object)">
            <summary>
            Initializes a new instance of a virtual ImageListViewItem class.
            </summary>
            <param name="key">The key identifying this item.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewItem.GetImage">
            <summary>
            Gets the item image.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewItem.BeginEdit">
            <summary>
            Begins editing the item.
            This method must be used while editing the item
            to prevent collisions with the cache manager.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewItem.EndEdit(System.Boolean)">
            <summary>
            Ends editing and updates the item.
            </summary>
            <param name="update">If set to true, the item will be immediately updated.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewItem.EndEdit">
            <summary>
            Ends editing and updates the item.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewItem.Update">
            <summary>
            Updates item thumbnail and item details.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewItem.GetSubItemText(Njit.ImageListView.ColumnType)">
            <summary>
            Returns the sub item item text corresponding to the specified column type.
            </summary>
            <param name="type">The type of information to return.</param>
            <returns>Formatted text for the given column type.</returns>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewItem.UpdateFileInfo">
            <summary>
            Updates file info for the image file represented by this item.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewItem.UpdateDetailsInternal(Njit.ImageListView.Utility.ShellImageFileInfo)">
            <summary>
            Invoked by the worker thread to update item details.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewItem.UpdateDetailsInternal(Njit.ImageListView.VirtualItemDetailsEventArgs)">
            <summary>
            Invoked by the worker thread to update item details.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItem.BackColor">
            <summary>
            Gets or sets the background color of the item.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItem.ThumbnailCacheState">
            <summary>
            Gets the cache state of the item thumbnail.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItem.Focused">
            <summary>
            Gets a value determining if the item is focused.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItem.ForeColor">
            <summary>
            Gets or sets the foreground color of the item.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItem.Guid">
            <summary>
            Gets the unique identifier for this item.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItem.VirtualItemKey">
            <summary>
            Gets the virtual item key associated with this item.
            Returns null if the item is not a virtual item.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItem.ImageListView">
            <summary>
            Gets the ImageListView owning this item.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItem.Index">
            <summary>
            Gets the index of the item.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItem.Selected">
            <summary>
            Gets or sets a value determining if the item is selected.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItem.Tag">
            <summary>
            Gets or sets the user-defined data associated with the item.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItem.Text">
            <summary>
            Gets or sets the text associated with this item. If left blank, item Text 
            reverts to the name of the image file.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItem.Caption">
            <summary>
            Gets or sets the caption associated with this item.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItem.ThumbnailImage">
            <summary>
            Gets the thumbnail image. If the thumbnail image is not cached, it will be 
            added to the cache queue and DefaultImage of the owner image list view will
            be returned. If the thumbnail could not be cached ErrorImage of the owner
            image list view will be returned.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItem.ZOrder">
            <summary>
            Gets or sets the draw order of the item.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItem.DateAccessed">
            <summary>
            Gets the last access date of the image file represented by this item.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItem.DateCreated">
            <summary>
            Gets the creation date of the image file represented by this item.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItem.DateModified">
            <summary>
            Gets the modification date of the image file represented by this item.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItem.FileType">
            <summary>
            Gets the shell type of the image file represented by this item.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItem.FileName">
            <summary>
            Gets or sets the name of the image fie represented by this item.
            </summary>        
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItem.FilePath">
            <summary>
            Gets the path of the image fie represented by this item.
            </summary>        
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItem.FileSize">
            <summary>
            Gets file size in bytes.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItem.Dimensions">
            <summary>
            Gets image dimensions.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItem.Resolution">
            <summary>
            Gets image resolution in pixels per inch.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItem.ImageDescription">
            <summary>
            Gets image deascription.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItem.EquipmentModel">
            <summary>
            Gets the camera model.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItem.DateTaken">
            <summary>
            Gets the date and time the image was taken.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItem.Artist">
            <summary>
            Gets the name of the artist.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItem.Copyright">
            <summary>
            Gets image copyright information.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItem.ExposureTime">
            <summary>
            Gets the exposure time in seconds.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItem.FNumber">
            <summary>
            Gets the F number.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItem.ISOSpeed">
            <summary>
            Gets the ISO speed.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItem.ShutterSpeed">
            <summary>
            Gets the shutter speed.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItem.Aperture">
            <summary>
            Gets the lens aperture value.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItem.UserComment">
            <summary>
            Gets user comments.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ImageListViewItemCacheManager">
            <summary>
            Represents the cache manager responsible for asynchronously loading
            item details.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewItemCacheManager.#ctor(Njit.ImageListView.ImageListView)">
            <summary>
            Initializes a new instance of the ImageListViewItemCacheManager class.
            </summary>
            <param name="owner">The owner control.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewItemCacheManager.BeginItemEdit(System.Guid)">
            <summary>
            Starts editing an item. While items are edited,
            their original images will be seperately cached
            instead of fetching them from the file.
            </summary>
            <param name="guid">The GUID of the item</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewItemCacheManager.EndItemEdit(System.Guid)">
            <summary>
            Ends editing an item. After this call, item
            image will be continued to be fetched from the
            file.
            </summary>
            <param name="guid"></param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewItemCacheManager.Add(Njit.ImageListView.ImageListViewItem)">
            <summary>
            Adds the item to the cache queue.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewItemCacheManager.Stop">
            <summary>
            Stops the cache manager.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewItemCacheManager.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewItemCacheManager.DoWork">
            <summary>
            Used by the worker thread to read item data.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItemCacheManager.Stopping">
            <summary>
            Determines whether the cache thread is being stopped.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItemCacheManager.Stopped">
            <summary>
            Determines whether the cache thread is stopped.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ImageListViewItemCacheManager.CacheItem">
            <summary>
            Represents an item in the item cache.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewItemCacheManager.CacheItem.#ctor(Njit.ImageListView.ImageListViewItem)">
            <summary>
            Initializes a new instance of the CacheItem class.
            </summary>
            <param name="item">The ImageListViewItem associated 
            with this request.</param>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItemCacheManager.CacheItem.Item">
            <summary>
            Gets the ImageListViewItem associated with this request.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItemCacheManager.CacheItem.FileName">
            <summary>
            Gets the name of the image file.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItemCacheManager.CacheItem.IsVirtualItem">
            <summary>
            Gets whether Item is a virtual item.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewItemCacheManager.CacheItem.VirtualItemKey">
            <summary>
            Gets the public key for the virtual item.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ImageListViewLayoutManager">
            <summary>
            Represents the layout of the image list view drawing area.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewLayoutManager.#ctor(Njit.ImageListView.ImageListView)">
            <summary>
            Initializes a new instance of the ImageListViewLayoutManager class.
            </summary>
            <param name="owner">The owner control.</param>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewLayoutManager.GetItemBounds(System.Int32)">
            <summary>
            Returns the bounds of the item with the specified index.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewLayoutManager.GetItemBoundsWithMargin(System.Int32)">
            <summary>
            Returns the bounds of the item with the specified index, 
            including the margin around the item.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewLayoutManager.Update">
            <summary>
            Recalculates the control layout.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewLayoutManager.Update(System.Boolean)">
            <summary>
            Recalculates the control layout.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewLayoutManager.IsItemVisible(System.Guid)">
            <summary>
            Determines whether the item with the given guid is
            (partially) visible.
            </summary>
            <param name="guid">The guid of the item to check.</param>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewLayoutManager.ClientArea">
            <summary>
            Gets the bounds of the entire client area.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewLayoutManager.ImageListView">
            <summary>
            Gets the owner image list view.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewLayoutManager.ItemAreaBounds">
            <summary>
            Gets the extends of the item area.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewLayoutManager.ColumnHeaderBounds">
            <summary>
            Gets the extents of the column header area.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewLayoutManager.ItemSize">
            <summary>
            Gets the items size.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewLayoutManager.ItemSizeWithMargin">
            <summary>
            Gets the items size including the margin around the item.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewLayoutManager.Cols">
            <summary>
            Gets the maximum number of columns that can be displayed.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewLayoutManager.Rows">
            <summary>
            Gets the maximum number of rows that can be displayed.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewLayoutManager.FirstPartiallyVisible">
            <summary>
            Gets the index of the first partially visible item.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewLayoutManager.LastPartiallyVisible">
            <summary>
            Gets the index of the last partially visible item.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewLayoutManager.FirstVisible">
            <summary>
            Gets the index of the first fully visible item.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewLayoutManager.LastVisible">
            <summary>
            Gets the index of the last fully visible item.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewLayoutManager.UpdateRequired">
            <summary>
            Determines whether an update is required.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.ImageListViewSerializer">
            <summary>
            Adds serialization code for the column headers as a collection of CodeDom statements.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
            <summary>
            Deserializes the specified serialized CodeDOM object into an object.
            </summary>
            <param name="manager">A serialization manager interface that is used during the deserialization process.</param>
            <param name="codeObject">A serialized CodeDOM object to deserialize.</param>
            <returns>The deserialized CodeDOM object.</returns>
        </member>
        <member name="M:Njit.ImageListView.ImageListViewSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
            <summary>
            Serializes the specified object into a CodeDOM object.
            </summary>
            <param name="manager">The serialization manager to use during serialization.</param>
            <param name="value">The object to serialize.</param>
            <returns>
            A CodeDOM object representing the object that has been serialized.
            </returns>
        </member>
        <member name="T:Njit.ImageListView.ImageListViewResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewResources.Aperture">
            <summary>
              Looks up a localized string similar to Aperture.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewResources.Artist">
            <summary>
              Looks up a localized string similar to Artist.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewResources.Copyright">
            <summary>
              Looks up a localized string similar to Copyright.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewResources.DateAccessed">
            <summary>
              Looks up a localized string similar to Last Access.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewResources.DateCreated">
            <summary>
              Looks up a localized string similar to Created.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewResources.DateModified">
            <summary>
              Looks up a localized string similar to Modified.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewResources.DateTaken">
            <summary>
              Looks up a localized string similar to Taken.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewResources.DefaultImage">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewResources.Dimensions">
            <summary>
              Looks up a localized string similar to Dimensions.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewResources.EquipmentModel">
            <summary>
              Looks up a localized string similar to Camera.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewResources.ErrorImage">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewResources.ExposureTime">
            <summary>
              Looks up a localized string similar to Exposure Time.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewResources.FileName">
            <summary>
              Looks up a localized string similar to Filename.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewResources.FilePath">
            <summary>
              Looks up a localized string similar to Path.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewResources.FileSize">
            <summary>
              Looks up a localized string similar to Size.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewResources.FileType">
            <summary>
              Looks up a localized string similar to Type.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewResources.FNumber">
            <summary>
              Looks up a localized string similar to F Number.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewResources.ImageDescription">
            <summary>
              Looks up a localized string similar to Description.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewResources.ISOSpeed">
            <summary>
              Looks up a localized string similar to ISO Speed.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewResources.Name">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewResources.Resolution">
            <summary>
              Looks up a localized string similar to Resolution.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewResources.ShutterSpeed">
            <summary>
              Looks up a localized string similar to Shutter Speed.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewResources.SortAscending">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewResources.SortDescending">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Njit.ImageListView.ImageListViewResources.UserComment">
            <summary>
              Looks up a localized string similar to Comments.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.Utility">
            <summary>
            Contains utility functions.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.Utility.PropertyTagThumbnailData">
            <summary>
            Represents the Exif tag for thumbnail data.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.Utility.PropertyTagThumbnailImageWidth">
            <summary>
            Represents the Exif tag for thumbnail image width.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.Utility.PropertyTagThumbnailImageHeight">
            <summary>
            Represents the Exif tag for thumbnail image height.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.Utility.PropertyTagImageDescription">
            <summary>
            Represents the Exif tag for  inage description.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.Utility.PropertyTagEquipmentModel">
            <summary>
            Represents the Exif tag for the equipment model.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.Utility.PropertyTagDateTime">
            <summary>
            Represents the Exif tag for date and time the picture 
            was taken.
            </summary>        
        </member>
        <member name="F:Njit.ImageListView.Utility.PropertyTagArtist">
            <summary>
            Represents the Exif tag for the artist.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.Utility.PropertyTagCopyright">
            <summary>
            Represents the Exif tag for copyright information.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.Utility.PropertyTagExposureTime">
            <summary>
            Represents the Exif tag for exposure time.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.Utility.PropertyTagFNumber">
            <summary>
            Represents the Exif tag for F-Number.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.Utility.PropertyTagISOSpeed">
            <summary>
            Represents the Exif tag for ISO speed.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.Utility.PropertyTagShutterSpeed">
            <summary>
            Represents the Exif tag for shutter speed.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.Utility.PropertyTagAperture">
            <summary>
            Represents the Exif tag for aperture value.
            </summary>
        </member>
        <member name="F:Njit.ImageListView.Utility.PropertyTagUserComment">
            <summary>
            Represents the Exif tag for user comments.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.Utility.FormatSize(System.Int64)">
            <summary>
            Formats the given file size as a human readable string.
            </summary>
            <param name="size">File size in bytes.</param>
        </member>
        <member name="M:Njit.ImageListView.Utility.DrawStringPair(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.Brush)">
            <summary>
            Draws the given caption and text inside the given rectangle.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.Utility.ThumbnailFromImage(System.Drawing.Image,System.Drawing.Size,System.Drawing.Color)">
            <summary>
            Creates a thumbnail from the given image.
            </summary>
            <param name="image">The source image.</param>
            <param name="size">Requested image size.</param>
            <param name="backColor">Background color of returned thumbnail.</param>
            <returns>The image from the given file or null if an error occurs.</returns>
        </member>
        <member name="M:Njit.ImageListView.Utility.ThumbnailFromFile(System.String,System.Drawing.Size,Njit.ImageListView.UseEmbeddedThumbnails,System.Drawing.Color)">
            <summary>
            Creates a thumbnail from the given image file.
            </summary>
            <param name="filename">The filename pointing to an image.</param>
            <param name="size">Requested image size.</param>
            <param name="useEmbeddedThumbnails">Embedded thumbnail usage.</param>
            <param name="backColor">Background color of returned thumbnail.</param>
            <returns>The image from the given file or null if an error occurs.</returns>
        </member>
        <member name="M:Njit.ImageListView.Utility.GetSizedImageBounds(System.Drawing.Image,System.Drawing.Size)">
            <summary>
            Gets the scaled size of an image required to fit
            in to the given size keeping the image aspect ratio.
            </summary>
            <param name="image">The source image.</param>
            <param name="fit">The size to fit in to.</param>
            <returns></returns>
        </member>
        <member name="M:Njit.ImageListView.Utility.GetSizedImageBounds(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single)">
            <summary>
            Gets the bounding rectangle of an image required to fit
            in to the given rectangle keeping the image aspect ratio.
            </summary>
            <param name="image">The source image.</param>
            <param name="fit">The rectangle to fit in to.</param>
            <param name="hAlign">Horizontal image aligment in percent.</param>
            <param name="vAlign">Vertical image aligment in percent.</param>
            <returns></returns>
        </member>
        <member name="M:Njit.ImageListView.Utility.GetSizedImageBounds(System.Drawing.Image,System.Drawing.Rectangle)">
            <summary>
            Gets the bounding rectangle of an image required to fit
            in to the given rectangle keeping the image aspect ratio.
            The image will be centered in the fit box.
            </summary>
            <param name="image">The source image.</param>
            <param name="fit">The rectangle to fit in to.</param>
            <returns></returns>
        </member>
        <member name="M:Njit.ImageListView.Utility.GetRoundedRectanglePath(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets a path representing a rounded rectangle.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.Utility.FillRoundedRectangle(System.Drawing.Graphics,System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Fills the interior of a rounded rectangle.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.Utility.FillRoundedRectangle(System.Drawing.Graphics,System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Fills the interior of a rounded rectangle.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.Utility.FillRoundedRectangle(System.Drawing.Graphics,System.Drawing.Brush,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Fills the interior of a rounded rectangle.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.Utility.FillRoundedRectangle(System.Drawing.Graphics,System.Drawing.Brush,System.Drawing.RectangleF,System.Single)">
            <summary>
            Fills the interior of a rounded rectangle.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.Utility.DrawRoundedRectangle(System.Drawing.Graphics,System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws the outline of a rounded rectangle.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.Utility.DrawRoundedRectangle(System.Drawing.Graphics,System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws the outline of a rounded rectangle.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.Utility.DrawRoundedRectangle(System.Drawing.Graphics,System.Drawing.Pen,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Draws the outline of a rounded rectangle.
            </summary>
        </member>
        <member name="M:Njit.ImageListView.Utility.DrawRoundedRectangle(System.Drawing.Graphics,System.Drawing.Pen,System.Drawing.RectangleF,System.Single)">
            <summary>
            Draws the outline of a rounded rectangle.
            </summary>
        </member>
        <member name="T:Njit.ImageListView.Utility.ShellImageFileInfo">
            <summary>
            A utility class combining FileInfo with SHGetFileInfo for image files.
            </summary>
        </member>
    </members>
</doc>
